/*
 * iaxxx-register-defs-cnr8.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/

#ifndef __IAXXX_REGISTER_DEFS_CNR8_H__
#define __IAXXX_REGISTER_DEFS_CNR8_H__

/*** The base address for this set of registers ***/
#define IAXXX_CNR8_REGS_ADDR (0x40020000)

/*** CNR8_CNR8_APB_CLK_HW_CG (0x40020000) ***/
/*
 * Hardware Controlled enable for cnr8_apb_clk. This clock is sourced from
 * pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access CNR8 APB registers
 */
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_ADDR (0x40020000)
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_CNR8_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_DBG_CLK_CG (0x40020004) ***/
/*
 * Clock Gate for dbg_clk. Disabling this gate stops clock supply to debug
 * modules. This clock is sourced from pd8_lpx_clk. This bit should be set to
 * 0 when not in debug mode for power saving.
 */
#define IAXXX_CNR8_DBG_CLK_CG_ADDR (0x40020004)
#define IAXXX_CNR8_DBG_CLK_CG_MASK_VAL 0x00000001
#define IAXXX_CNR8_DBG_CLK_CG_RMASK_VAL 0x00000001
#define IAXXX_CNR8_DBG_CLK_CG_WMASK_VAL 0x00000001
#define IAXXX_CNR8_DBG_CLK_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_DBG_CLK_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_DBG_CLK_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_DBG_CLK_CG_EN_POS 0
#define IAXXX_CNR8_DBG_CLK_CG_EN_SIZE 1
#define IAXXX_CNR8_DBG_CLK_CG_EN_DECL 0

/*** CNR8_GLBL_ETB_RAM_0_CLK_HW_CG (0x40020008) ***/
/*
 * Hardware control enable for glbl_etb_ram_0_clk_o. <br>This clock is
 * sourced from pd8_lpx_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to glbl_etb_ram_0
 */
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_ADDR (0x40020008)
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_GLBL_ETB_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG (0x4002000c) ***/
/*
 * Hardware Controlled enable for glbl_mem_apb_clk. This clock is sourced
 * from pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access GLBL MEM PAC APB registers
 */
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_ADDR (0x4002000c)
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_PAC_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_GLBL_MEM_RAM_0_CLK_HW_CG (0x40020010) ***/
/*
 * Hardware control enable for glbl_mem_ram_0_clk_o. <br>This clock is
 * sourced from pd8_lpx_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to glbl_mem_ram_0
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_ADDR (0x40020010)
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_GLBL_MEM_RAM_1_CLK_HW_CG (0x40020014) ***/
/*
 * Hardware control enable for glbl_mem_ram_1_clk_o. <br>This clock is
 * sourced from pd8_lpx_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to glbl_mem_ram_1
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_ADDR (0x40020014)
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_GLBL_MEM_RAM_1_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_HDMAC_PAC_APB_CLK_HW_CG (0x40020018) ***/
/*
 * Hardware Controlled enable for dmac_apb_clk. This clock is sourced from
 * pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access HDMAC PAC APB registers
 */
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_ADDR (0x40020018)
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_HDMAC_PAC_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_IO_CTRL_APB_CLK_HW_CG (0x4002001c) ***/
/*
 * Hardware Controlled enable for io_ctrl_apb_clk. This clock is sourced from
 * pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access IO_CTRL APB registers
 */
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_ADDR (0x4002001c)
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_IO_CTRL_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_MSW_APB_CLK_HW_CG (0x40020020) ***/
/*
 * Hardware Controlled enable for msw_apb_clk. This clock is sourced from
 * pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access MSW APB registers
 */
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_ADDR (0x40020020)
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_MSW_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_PCTRL_APB_CLK_HW_CG (0x40020024) ***/
/*
 * Hardware Controlled enable for pctrl_apb_clk. This clock is sourced from
 * pd8_lpx_clk. It may be required to set OVERRIDE for debug by
 * debugger.<br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is ungated if AHB masters
 * access PCTRL APB registers
 */
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_ADDR (0x40020024)
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_PCTRL_APB_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_0_CLK_HW_CG (0x40020028) ***/
/*
 * Hardware control enable for pool_hg_ram_0_clk_o. <br>This clock is sourced
 * from pool_hg_ram_0_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_0
 */
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_ADDR (0x40020028)
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_1_CLK_HW_CG (0x4002002c) ***/
/*
 * Hardware control enable for pool_hg_ram_1_clk_o. <br>This clock is sourced
 * from pool_hg_ram_1_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_1
 */
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_ADDR (0x4002002c)
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_1_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_2_CLK_HW_CG (0x40020030) ***/
/*
 * Hardware control enable for pool_hg_ram_2_clk_o. <br>This clock is sourced
 * from pool_hg_ram_2_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_2
 */
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_ADDR (0x40020030)
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_2_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_3_CLK_HW_CG (0x40020034) ***/
/*
 * Hardware control enable for pool_hg_ram_3_clk_o. <br>This clock is sourced
 * from pool_hg_ram_3_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_3
 */
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_ADDR (0x40020034)
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_3_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_4_CLK_HW_CG (0x40020038) ***/
/*
 * Hardware control enable for pool_hg_ram_4_clk_o. <br>This clock is sourced
 * from pool_hg_ram_4_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_4
 */
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_ADDR (0x40020038)
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_4_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_5_CLK_HW_CG (0x4002003c) ***/
/*
 * Hardware control enable for pool_hg_ram_5_clk_o. <br>This clock is sourced
 * from pool_hg_ram_5_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_5
 */
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_ADDR (0x4002003c)
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_5_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_6_CLK_HW_CG (0x40020040) ***/
/*
 * Hardware control enable for pool_hg_ram_6_clk_o. <br>This clock is sourced
 * from pool_hg_ram_6_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_6
 */
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_ADDR (0x40020040)
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_6_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_7_CLK_HW_CG (0x40020044) ***/
/*
 * Hardware control enable for pool_hg_ram_7_clk_o. <br>This clock is sourced
 * from pool_hg_ram_7_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_7
 */
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_ADDR (0x40020044)
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_7_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_8_CLK_HW_CG (0x40020048) ***/
/*
 * Hardware control enable for pool_hg_ram_8_clk_o. <br>This clock is sourced
 * from pool_hg_ram_8_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_8
 */
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_ADDR (0x40020048)
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_8_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_9_CLK_HW_CG (0x4002004c) ***/
/*
 * Hardware control enable for pool_hg_ram_9_clk_o. <br>This clock is sourced
 * from pool_hg_ram_9_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_9
 */
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_ADDR (0x4002004c)
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_9_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_10_CLK_HW_CG (0x40020050) ***/
/*
 * Hardware control enable for pool_hg_ram_10_clk_o. <br>This clock is
 * sourced from pool_hg_ram_10_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_10
 */
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_ADDR (0x40020050)
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_10_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_11_CLK_HW_CG (0x40020054) ***/
/*
 * Hardware control enable for pool_hg_ram_11_clk_o. <br>This clock is
 * sourced from pool_hg_ram_11_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_11
 */
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_ADDR (0x40020054)
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_11_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_12_CLK_HW_CG (0x40020058) ***/
/*
 * Hardware control enable for pool_hg_ram_12_clk_o. <br>This clock is
 * sourced from pool_hg_ram_12_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_12
 */
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_ADDR (0x40020058)
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_12_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_13_CLK_HW_CG (0x4002005c) ***/
/*
 * Hardware control enable for pool_hg_ram_13_clk_o. <br>This clock is
 * sourced from pool_hg_ram_13_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_13
 */
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_ADDR (0x4002005c)
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_13_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_14_CLK_HW_CG (0x40020060) ***/
/*
 * Hardware control enable for pool_hg_ram_14_clk_o. <br>This clock is
 * sourced from pool_hg_ram_14_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_14
 */
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_ADDR (0x40020060)
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_14_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_HG_RAM_15_CLK_HW_CG (0x40020064) ***/
/*
 * Hardware control enable for pool_hg_ram_15_clk_o. <br>This clock is
 * sourced from pool_hg_ram_15_clk_i.<br>DO NOT USE OVERRIDES unless
 * suggested by VLSI. <br><br>When EN = 0, Clock will be cut regardless of
 * Hardware Control and HW_OVRD configuration<br>When EN = 1, Clock will be
 * supplied based on the Hardware Control condition<br><br>NOTE:<br>DO NOT
 * SET HW_OVRD = 1 or Modify EN Bit unless suggested by VLSI<br>For cases,
 * where HW_OVRD = 1 on Reset, SW is supposed to clear them after successful
 * bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_hg_ram_15
 */
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_ADDR (0x40020064)
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_HG_RAM_15_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_LG_RAM_0_CLK_HW_CG (0x40020068) ***/
/*
 * Hardware control enable for pool_lg_ram_0_clk_o. <br>This clock is sourced
 * from pool_lg_ram_0_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_lg_ram_0
 */
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_ADDR (0x40020068)
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_LG_RAM_1_CLK_HW_CG (0x4002006c) ***/
/*
 * Hardware control enable for pool_lg_ram_1_clk_o. <br>This clock is sourced
 * from pool_lg_ram_1_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_lg_ram_1
 */
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_ADDR (0x4002006c)
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_1_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_LG_RAM_2_CLK_HW_CG (0x40020070) ***/
/*
 * Hardware control enable for pool_lg_ram_2_clk_o. <br>This clock is sourced
 * from pool_lg_ram_2_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_lg_ram_2
 */
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_ADDR (0x40020070)
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_2_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_LG_RAM_3_CLK_HW_CG (0x40020074) ***/
/*
 * Hardware control enable for pool_lg_ram_3_clk_o. <br>This clock is sourced
 * from pool_lg_ram_3_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_lg_ram_3
 */
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_ADDR (0x40020074)
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_LG_RAM_3_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_SM_RAM_0_CLK_HW_CG (0x40020078) ***/
/*
 * Hardware control enable for pool_sm_ram_0_clk_o. <br>This clock is sourced
 * from pool_sm_ram_0_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_sm_ram_0
 */
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_ADDR (0x40020078)
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_SM_RAM_1_CLK_HW_CG (0x4002007c) ***/
/*
 * Hardware control enable for pool_sm_ram_1_clk_o. <br>This clock is sourced
 * from pool_sm_ram_1_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_sm_ram_1
 */
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_ADDR (0x4002007c)
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_1_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_SM_RAM_2_CLK_HW_CG (0x40020080) ***/
/*
 * Hardware control enable for pool_sm_ram_2_clk_o. <br>This clock is sourced
 * from pool_sm_ram_2_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_sm_ram_2
 */
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_ADDR (0x40020080)
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_2_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_SM_RAM_3_CLK_HW_CG (0x40020084) ***/
/*
 * Hardware control enable for pool_sm_ram_3_clk_o. <br>This clock is sourced
 * from pool_sm_ram_3_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_sm_ram_3
 */
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_ADDR (0x40020084)
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_SM_RAM_3_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_TN_RAM_0_CLK_HW_CG (0x40020088) ***/
/*
 * Hardware control enable for pool_tn_ram_0_clk_o. <br>This clock is sourced
 * from pool_tn_ram_0_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_tn_ram_0
 */
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_ADDR (0x40020088)
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_0_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_TN_RAM_1_CLK_HW_CG (0x4002008c) ***/
/*
 * Hardware control enable for pool_tn_ram_1_clk_o. <br>This clock is sourced
 * from pool_tn_ram_1_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_tn_ram_1
 */
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_ADDR (0x4002008c)
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_1_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_TN_RAM_2_CLK_HW_CG (0x40020090) ***/
/*
 * Hardware control enable for pool_tn_ram_2_clk_o. <br>This clock is sourced
 * from pool_tn_ram_2_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_tn_ram_2
 */
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_ADDR (0x40020090)
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_2_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_POOL_TN_RAM_3_CLK_HW_CG (0x40020094) ***/
/*
 * Hardware control enable for pool_tn_ram_3_clk_o. <br>This clock is sourced
 * from pool_tn_ram_3_clk_i.<br>DO NOT USE OVERRIDES unless suggested by
 * VLSI. <br><br>When EN = 0, Clock will be cut regardless of Hardware
 * Control and HW_OVRD configuration<br>When EN = 1, Clock will be supplied
 * based on the Hardware Control condition<br><br>NOTE:<br>DO NOT SET HW_OVRD
 * = 1 or Modify EN Bit unless suggested by VLSI<br>For cases, where HW_OVRD
 * = 1 on Reset, SW is supposed to clear them after successful bootup
 * INTERNAL: <br><br>HW Control Condition:<br>Clock is gated if there are no
 * access to pool_tn_ram_3
 */
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_ADDR (0x40020094)
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_MASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_RMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_WMASK_VAL 0x00000003
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_RESET_VAL 0x00000001

/*
 * Enable for clock gate
 */
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_EN_MASK 0x00000001
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_EN_RESET_VAL 0x1
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_EN_POS 0
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_EN_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_EN_DECL 0

/*
 * Override HW CTRL
 */
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_HW_OVRD_MASK 0x00000002
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_HW_OVRD_RESET_VAL 0x0
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_HW_OVRD_POS 1
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_HW_OVRD_SIZE 1
#define IAXXX_CNR8_POOL_TN_RAM_3_CLK_HW_CG_HW_OVRD_DECL 1

/*** CNR8_TRACECLKIN_SC (0x40020098) ***/
/*
 * traceclkin is sourced from dbg_clk. Divide traceclkin by (SKIP_CNT+1).
 */
#define IAXXX_CNR8_TRACECLKIN_SC_ADDR (0x40020098)
#define IAXXX_CNR8_TRACECLKIN_SC_MASK_VAL 0x000003ff
#define IAXXX_CNR8_TRACECLKIN_SC_RMASK_VAL 0x000003ff
#define IAXXX_CNR8_TRACECLKIN_SC_WMASK_VAL 0x000003ff
#define IAXXX_CNR8_TRACECLKIN_SC_RESET_VAL 0x00000000

/*
 * Enable for Skip Counter
 */
#define IAXXX_CNR8_TRACECLKIN_SC_EN_MASK 0x00000001
#define IAXXX_CNR8_TRACECLKIN_SC_EN_RESET_VAL 0x0
#define IAXXX_CNR8_TRACECLKIN_SC_EN_POS 0
#define IAXXX_CNR8_TRACECLKIN_SC_EN_SIZE 1
#define IAXXX_CNR8_TRACECLKIN_SC_EN_DECL 0

/*
 * Skip Count value
 */
#define IAXXX_CNR8_TRACECLKIN_SC_SKIP_CNT_MASK 0x000003fe
#define IAXXX_CNR8_TRACECLKIN_SC_SKIP_CNT_RESET_VAL 0x0
#define IAXXX_CNR8_TRACECLKIN_SC_SKIP_CNT_POS 1
#define IAXXX_CNR8_TRACECLKIN_SC_SKIP_CNT_SIZE 9
#define IAXXX_CNR8_TRACECLKIN_SC_SKIP_CNT_DECL (9:1)

/*** CNR8_DMA_HS_MUX_SEL (0x4002009c) ***/
/*
 * Selection for each DMA channel. Every channel select is a 2 bit value
 * Note that there is a possibility that multiple DMA channels are assigned
 * to the same I2C/SPI/UART channel.
 * SW is expected to handle channel selections to avoid conflicts.
 * For example, if DMA 0 and DMA 10 hardware handshake signals are assigned
 * to I2C0 Tx, SW must ensure that only one of them uses HW handshake i.e.,
 * through DMA Handshake Mux
 * Following table summarizes the DMA HS Mux selection options
 *
 ===============================================================
 * DMA HS     I2C Sel        SPI Sel        UART Sel        AF Sel
 * ===============================================================
 * 0          I2C0 Tx        SPI0 Tx        UART 0 Tx       AF 0
 * 1          I2C0 Rx        SPI0 Rx        UART 0 Rx       AF 1
 * 2          I2C1 Tx        SPI1 Tx        UART 1 Tx       AF 2
 * 3          I2C1 Rx        SPI1 Rx        UART 1 Rx       AF 3
 * 4          I2C0 Tx        SPI0 Tx        UART 0 Tx       AF 4
 * 5          I2C0 Rx        SPI0 Rx        UART 0 Rx       AF 5
 * 6          I2C1 Tx        SPI1 Tx        UART 1 Tx       AF 6
 * 7          I2C1 Rx        SPI1 Rx        UART 1 Rx       AF 7
 * 8          I2C0 Tx        SPI0 Tx        UART 0 Tx       AF 8
 * 9          I2C0 Rx        SPI0 Rx        UART 0 Rx       AF 9
 * 10         I2C1 Tx        SPI1 Tx        UART 1 Tx       AF 10
 * 11         I2C1 Rx        SPI1 Rx        UART 1 Rx       AF 11
 * 12         I2C0 Tx        SPI0 Tx        UART 0 Tx       AF 0
 * 13         I2C0 Rx        SPI0 Rx        UART 0 Rx       AF 1
 * 14         I2C1 Tx        SPI1 Tx        UART 1 Tx       AF 2
 * 15         I2C1 Rx        SPI1 Rx        UART 1 Rx       AF 3
 *
 A pair of handshake signals per channel is present in DMA for source and
 * destination peripheral. The handshake number is programmed in SRC_PER or
 * DST_PER of HDMAC.CH[(0:7)]_CFG_H register
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_ADDR (0x4002009c)
#define IAXXX_CNR8_DMA_HS_MUX_SEL_MASK_VAL 0xffffffff
#define IAXXX_CNR8_DMA_HS_MUX_SEL_RMASK_VAL 0xffffffff
#define IAXXX_CNR8_DMA_HS_MUX_SEL_WMASK_VAL 0xffffffff
#define IAXXX_CNR8_DMA_HS_MUX_SEL_RESET_VAL 0x00000000

/*
 * Select peripheral for DMA hardware handshake signal 0
 *   2'b00: I2C 0 Tx
 *   2'b01: SPI 0 Tx
 *   2'b10: UART 0 Tx
 *   2'b11: AF channel 0
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_0_MASK 0x00000003
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_0_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_0_POS 0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_0_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_0_DECL (1:0)

/*
 * Select peripheral for DMA hardware handshake signal 1
 *   2'b00: I2C 0 Rx
 *   2'b01: SPI 0 Rx
 *   2'b10: UART 0 Rx
 *   2'b11: AF channel 1
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_1_MASK 0x0000000c
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_1_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_1_POS 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_1_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_1_DECL (3:2)

/*
 * Select peripheral for DMA hardware handshake signal 2
 *   2'b00: I2C 1 Tx
 *   2'b01: SPI 1 Tx
 *   2'b10: UART 1 Tx
 *   2'b11: AF channel 2
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_2_MASK 0x00000030
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_2_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_2_POS 4
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_2_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_2_DECL (5:4)

/*
 * Select peripheral for DMA hardware handshake signal 3
 *   2'b00: I2C 1 Rx
 *   2'b01: SPI 1 Rx
 *   2'b10: UART 1 Rx
 *   2'b11: AF channel 3
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_3_MASK 0x000000c0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_3_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_3_POS 6
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_3_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_3_DECL (7:6)

/*
 * Select peripheral for DMA hardware handshake signal 4
 *   2'b00: I2C 0 Tx
 *   2'b01: SPI 0 Tx
 *   2'b10: UART 0 Tx
 *   2'b11: AF channel 4
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_4_MASK 0x00000300
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_4_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_4_POS 8
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_4_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_4_DECL (9:8)

/*
 * Select peripheral for DMA hardware handshake signal 5
 *   2'b00: I2C 0 Rx
 *   2'b01: SPI 0 Rx
 *   2'b10: UART 0 Rx
 *   2'b11: AF channel 5
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_5_MASK 0x00000c00
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_5_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_5_POS 10
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_5_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_5_DECL (11:10)

/*
 * Select peripheral for DMA hardware handshake signal 6
 *   2'b00: I2C 1 Tx
 *   2'b01: SPI 1 Tx
 *   2'b10: UART 1 Tx
 *   2'b11: AF channel 6
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_6_MASK 0x00003000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_6_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_6_POS 12
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_6_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_6_DECL (13:12)

/*
 * Select peripheral for DMA hardware handshake signal 7
 *   2'b00: I2C 1 Rx
 *   2'b01: SPI 1 Rx
 *   2'b10: UART 1 Rx
 *   2'b11: AF channel 7
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_7_MASK 0x0000c000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_7_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_7_POS 14
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_7_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_7_DECL (15:14)

/*
 * Select peripheral for DMA hardware handshake signal 8
 *   2'b00: I2C 0 Tx
 *   2'b01: SPI 0 Tx
 *   2'b10: UART 0 Tx
 *   2'b11: AF channel 8
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_8_MASK 0x00030000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_8_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_8_POS 16
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_8_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_8_DECL (17:16)

/*
 * Select peripheral for DMA hardware handshake signal 9
 *   2'b00: I2C 0 Rx
 *   2'b01: SPI 0 Rx
 *   2'b10: UART 0 Rx
 *   2'b11: AF channel 9
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_9_MASK 0x000c0000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_9_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_9_POS 18
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_9_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_9_DECL (19:18)

/*
 * Select peripheral for DMA hardware handshake signal 10
 *   2'b00: I2C 1 Tx
 *   2'b01: SPI 1 Tx
 *   2'b10: UART 1 Tx
 *   2'b11: AF channel 10
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_10_MASK 0x00300000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_10_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_10_POS 20
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_10_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_10_DECL (21:20)

/*
 * Select peripheral for DMA hardware handshake signal 11
 *   2'b00: I2C 1 Rx
 *   2'b01: SPI 1 Rx
 *   2'b10: UART 1 Rx
 *   2'b11: AF channel 11
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_11_MASK 0x00c00000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_11_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_11_POS 22
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_11_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_11_DECL (23:22)

/*
 * Select peripheral for DMA hardware handshake signal 12
 *   2'b00: I2C 0 Tx
 *   2'b01: SPI 0 Tx
 *   2'b10: UART 0 Tx
 *   2'b11: AF channel 0
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_12_MASK 0x03000000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_12_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_12_POS 24
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_12_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_12_DECL (25:24)

/*
 * Select peripheral for DMA hardware handshake signal 13
 *   2'b00: I2C 0 Rx
 *   2'b01: SPI 0 Rx
 *   2'b10: UART 0 Rx
 *   2'b11: AF channel 1
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_13_MASK 0x0c000000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_13_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_13_POS 26
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_13_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_13_DECL (27:26)

/*
 * Select peripheral for DMA hardware handshake signal 14
 *   2'b00: I2C 1 Tx
 *   2'b01: SPI 1 Tx
 *   2'b10: UART 1 Tx
 *   2'b11: AF channel 2
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_14_MASK 0x30000000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_14_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_14_POS 28
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_14_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_14_DECL (29:28)

/*
 * Select peripheral for DMA hardware handshake signal 15
 *   2'b00: I2C 1 Rx
 *   2'b01: SPI 1 Rx
 *   2'b10: UART 1 Rx
 *   2'b11: AF channel 3
 */
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_15_MASK 0xc0000000
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_15_RESET_VAL 0x0
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_15_POS 30
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_15_SIZE 2
#define IAXXX_CNR8_DMA_HS_MUX_SEL_HS_15_DECL (31:30)

/*** CNR8_FUNC_SOFT_RST (0x400200a0) ***/
/*
 * Reset the corresponding module. By default the modules, DMAC and PCTRL,
 * are kept in reset.
 */
#define IAXXX_CNR8_FUNC_SOFT_RST_ADDR (0x400200a0)
#define IAXXX_CNR8_FUNC_SOFT_RST_MASK_VAL 0x00000003
#define IAXXX_CNR8_FUNC_SOFT_RST_RMASK_VAL 0x00000003
#define IAXXX_CNR8_FUNC_SOFT_RST_WMASK_VAL 0x00000003
#define IAXXX_CNR8_FUNC_SOFT_RST_RESET_VAL 0x00000003

/*
 * HDMAC reset.
 */
#define IAXXX_CNR8_FUNC_SOFT_RST_HDMAC_SOFT_RST_MASK 0x00000001
#define IAXXX_CNR8_FUNC_SOFT_RST_HDMAC_SOFT_RST_RESET_VAL 0x1
#define IAXXX_CNR8_FUNC_SOFT_RST_HDMAC_SOFT_RST_POS 0
#define IAXXX_CNR8_FUNC_SOFT_RST_HDMAC_SOFT_RST_SIZE 1
#define IAXXX_CNR8_FUNC_SOFT_RST_HDMAC_SOFT_RST_DECL 0

/*
 * Processor Control reset.
 */
#define IAXXX_CNR8_FUNC_SOFT_RST_PCTRL_SOFT_RST_MASK 0x00000002
#define IAXXX_CNR8_FUNC_SOFT_RST_PCTRL_SOFT_RST_RESET_VAL 0x1
#define IAXXX_CNR8_FUNC_SOFT_RST_PCTRL_SOFT_RST_POS 1
#define IAXXX_CNR8_FUNC_SOFT_RST_PCTRL_SOFT_RST_SIZE 1
#define IAXXX_CNR8_FUNC_SOFT_RST_PCTRL_SOFT_RST_DECL 1

/*** CNR8_APB_REG_SOFT_RST (0x400200a4) ***/
/*
 * Resets APB registers
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_ADDR (0x400200a4)
#define IAXXX_CNR8_APB_REG_SOFT_RST_MASK_VAL 0x000000fe
#define IAXXX_CNR8_APB_REG_SOFT_RST_RMASK_VAL 0x00000000
#define IAXXX_CNR8_APB_REG_SOFT_RST_WMASK_VAL 0x00000000
#define IAXXX_CNR8_APB_REG_SOFT_RST_RESET_VAL 0x00000000

/*
 * Write 1 to reset MSW APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_MSW_APB_REG_SOFT_RST_MASK 0x00000002
#define IAXXX_CNR8_APB_REG_SOFT_RST_MSW_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_MSW_APB_REG_SOFT_RST_POS 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_MSW_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_MSW_APB_REG_SOFT_RST_DECL 1

/*
 * Write 1 to reset IO_CTRL APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_IO_CTRL_APB_REG_SOFT_RST_MASK 0x00000004
#define IAXXX_CNR8_APB_REG_SOFT_RST_IO_CTRL_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_IO_CTRL_APB_REG_SOFT_RST_POS 2
#define IAXXX_CNR8_APB_REG_SOFT_RST_IO_CTRL_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_IO_CTRL_APB_REG_SOFT_RST_DECL 2

/*
 * Write 1 to reset DMAC APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_DMAC_APB_REG_SOFT_RST_MASK 0x00000008
#define IAXXX_CNR8_APB_REG_SOFT_RST_DMAC_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_DMAC_APB_REG_SOFT_RST_POS 3
#define IAXXX_CNR8_APB_REG_SOFT_RST_DMAC_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_DMAC_APB_REG_SOFT_RST_DECL 3

/*
 * Write 1 to reset H2P0 APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P0_APB_REG_SOFT_RST_MASK 0x00000010
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P0_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P0_APB_REG_SOFT_RST_POS 4
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P0_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P0_APB_REG_SOFT_RST_DECL 4

/*
 * Write 1 to reset H2P1 APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P1_APB_REG_SOFT_RST_MASK 0x00000020
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P1_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P1_APB_REG_SOFT_RST_POS 5
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P1_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_H2P1_APB_REG_SOFT_RST_DECL 5

/*
 * Write 1 to reset PCTRL APB registers only. It will always read back as 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_PCTRL_APB_REG_SOFT_RST_MASK 0x00000040
#define IAXXX_CNR8_APB_REG_SOFT_RST_PCTRL_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_PCTRL_APB_REG_SOFT_RST_POS 6
#define IAXXX_CNR8_APB_REG_SOFT_RST_PCTRL_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_PCTRL_APB_REG_SOFT_RST_DECL 6

/*
 * Write 1 to reset GLBL_MEM APB registers only. It will always read back as
 * 0
 */
#define IAXXX_CNR8_APB_REG_SOFT_RST_GLBL_MEM_APB_REG_SOFT_RST_MASK 0x00000080
#define IAXXX_CNR8_APB_REG_SOFT_RST_GLBL_MEM_APB_REG_SOFT_RST_RESET_VAL 0x0
#define IAXXX_CNR8_APB_REG_SOFT_RST_GLBL_MEM_APB_REG_SOFT_RST_POS 7
#define IAXXX_CNR8_APB_REG_SOFT_RST_GLBL_MEM_APB_REG_SOFT_RST_SIZE 1
#define IAXXX_CNR8_APB_REG_SOFT_RST_GLBL_MEM_APB_REG_SOFT_RST_DECL 7

/*** CNR8_SPARE_GATES_0 (0x400200a8) ***/
/*
 * This is a dummy register which is tied to the spare_gates module. It does
 * not serve any functional purpose.
 */
#define IAXXX_CNR8_SPARE_GATES_0_ADDR (0x400200a8)
#define IAXXX_CNR8_SPARE_GATES_0_MASK_VAL 0xffffffff
#define IAXXX_CNR8_SPARE_GATES_0_RMASK_VAL 0xffffffff
#define IAXXX_CNR8_SPARE_GATES_0_WMASK_VAL 0x0000ffff
#define IAXXX_CNR8_SPARE_GATES_0_RESET_VAL 0x00000000

/*
 * Dummy field whose output goes in to the spare_gates module.
 */
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_1_MASK 0x0000ffff
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_1_RESET_VAL 0x0
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_1_POS 0
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_1_SIZE 16
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_1_DECL (15:0)

/*
 * Dummy field which reads the output of the spare_gates module.
 */
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_2_MASK 0xffff0000
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_2_RESET_VAL 0x0
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_2_POS 16
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_2_SIZE 16
#define IAXXX_CNR8_SPARE_GATES_0_FIELD_2_DECL (31:16)

/*** CNR8_SPARE_GATES_1 (0x400200ac) ***/
/*
 * This is a dummy register which is tied to the spare_gates module. It does
 * not serve any functional purpose.
 */
#define IAXXX_CNR8_SPARE_GATES_1_ADDR (0x400200ac)
#define IAXXX_CNR8_SPARE_GATES_1_MASK_VAL 0xffffffff
#define IAXXX_CNR8_SPARE_GATES_1_RMASK_VAL 0xffffffff
#define IAXXX_CNR8_SPARE_GATES_1_WMASK_VAL 0x0000ffff
#define IAXXX_CNR8_SPARE_GATES_1_RESET_VAL 0x00000000

/*
 * Dummy field whose output goes in to the spare_gates module.
 */
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_1_MASK 0x0000ffff
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_1_RESET_VAL 0x0
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_1_POS 0
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_1_SIZE 16
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_1_DECL (15:0)

/*
 * Dummy field which reads the output of the spare_gates module.
 */
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_2_MASK 0xffff0000
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_2_RESET_VAL 0x0
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_2_POS 16
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_2_SIZE 16
#define IAXXX_CNR8_SPARE_GATES_1_FIELD_2_DECL (31:16)

/* Number of registers in the module */
#define IAXXX_CNR8_REG_NUM 44

#endif /* __IAXXX_REGISTER_DEFS_CNR8_H__*/
