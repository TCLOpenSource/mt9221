/*
 * iaxxx-register-defs-glbl-mem.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/

#ifndef __IAXXX_REGISTER_DEFS_GLBL_MEM_H__
#define __IAXXX_REGISTER_DEFS_GLBL_MEM_H__

/*** The base address for this set of registers ***/
#define IAXXX_GLBL_MEM_REGS_ADDR (0x40024000)

/*** GLBL_MEM_PAC_WIN_BYPASS (0x40024000) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_ADDR (0x40024000)
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_RESET_VAL 0x00000fff

/*
 * Bypass PAC for address window 0.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN0_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN0_DECL 0

/*
 * Bypass PAC for address window 1.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN1_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN1_DECL 1

/*
 * Bypass PAC for address window 2.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN2_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN2_DECL 2

/*
 * Bypass PAC for address window 3.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN3_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN3_DECL 3

/*
 * Bypass PAC for address window 4.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN4_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN4_DECL 4

/*
 * Bypass PAC for address window 5.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN5_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN5_DECL 5

/*
 * Bypass PAC for address window 6.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN6_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN6_DECL 6

/*
 * Bypass PAC for address window 7.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN7_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN7_DECL 7

/*
 * Bypass PAC for address window 8.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN8_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN8_DECL 8

/*
 * Bypass PAC for address window 9.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN9_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN9_DECL 9

/*
 * Bypass PAC for address window 10.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN10_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN10_DECL 10

/*
 * Bypass PAC for address window 11.
 */
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN11_RESET_VAL 0x1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_BYPASS_WIN11_DECL 11

/*** GLBL_MEM_PAC_WIN0_RANGE (0x40024004) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_ADDR (0x40024004)
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window0 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window0 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window0 when PAC_WIN0_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN0_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN0_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN1_RANGE (0x40024008) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_ADDR (0x40024008)
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window1 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window1 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window1 when PAC_WIN1_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN1_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN1_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN2_RANGE (0x4002400c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_ADDR (0x4002400c)
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window2 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window2 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window2 when PAC_WIN2_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN2_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN2_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN3_RANGE (0x40024010) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_ADDR (0x40024010)
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window3 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window3 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window3 when PAC_WIN3_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN3_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN3_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN4_RANGE (0x40024014) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_ADDR (0x40024014)
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window4 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window4 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window4 when PAC_WIN4_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN4_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN4_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN5_RANGE (0x40024018) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_ADDR (0x40024018)
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window5 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window5 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window5 when PAC_WIN5_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN5_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN5_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN6_RANGE (0x4002401c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_ADDR (0x4002401c)
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window6 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window6 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window6 when PAC_WIN6_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN6_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN6_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN7_RANGE (0x40024020) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_ADDR (0x40024020)
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window7 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window7 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window7 when PAC_WIN7_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN7_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN7_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN8_RANGE (0x40024024) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_ADDR (0x40024024)
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window8 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window8 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window8 when PAC_WIN8_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN8_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN8_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN9_RANGE (0x40024028) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_ADDR (0x40024028)
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window9 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window9 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window9 when PAC_WIN9_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN9_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN9_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN10_RANGE (0x4002402c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_ADDR (0x4002402c)
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window10 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window10 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window10 when PAC_WIN10_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN10_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN10_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN11_RANGE (0x40024030) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_ADDR (0x40024030)
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_MASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_RMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_WMASK_VAL 0xffff7fff
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_RESET_VAL 0x00000000

/*
 * These 15 bits set the address window11 base for in-bound AHB address
 * bits[(24:10)]. This number is included in the address comparison
 * The in-bound AHB address's top 7 bits [(31:25)] are fixed: DMAC=7'b0101_000;
 * GLBL_MEM=7'b0101_100; HMD=7'b1010_011; DMX=7'b1010_100
 */
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BASE_MASK 0x00007fff
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BASE_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BASE_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BASE_SIZE 15
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BASE_DECL (14:0)

/*
 * These 16 bits set the address window11 bound for in-bound AHB address
 * bits[(24:10)]. This number is excluded in the address comparison
 * An address is in a window11 when PAC_WIN11_RANGE.BOUND > {1'b0,
 * AHB_HADDR[(24:10)]} and AHB_HADDR[(24:10)] >= PAC_WIN11_RANGE.BASE and an
 * internal AHB_HSEL is asserted and AHB_ADDR[(31:25)] match the system
 * address's top 7 bits
 */
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BOUND_MASK 0xffff0000
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BOUND_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BOUND_POS 16
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BOUND_SIZE 16
#define IAXXX_GLBL_MEM_PAC_WIN11_RANGE_BOUND_DECL (31:16)

/*** GLBL_MEM_PAC_WIN_DFLT_DENY_PERM (0x40024034) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_ADDR (0x40024034)
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_MASK_VAL 0x0000001b
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_RMASK_VAL 0x0000001b
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_WMASK_VAL 0x0000001b
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_RESET_VAL 0x00000000

/*
 * This bit determines if any out-of-address-windows access from HMD is
 * denied or not
 * If this bit is 0: An access from HMD out-of-address-windows is passed
 * along
 * Else if this bit is 1: Any access from HMD out-of-address-windows causes
 * HMD_WIN_DFLT_DENY_EXCP to be asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_EXCP_STS</a> register
 */
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_HMD_WIN_DFLT_DENY_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_HMD_WIN_DFLT_DENY_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_HMD_WIN_DFLT_DENY_POS 0
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_HMD_WIN_DFLT_DENY_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_HMD_WIN_DFLT_DENY_DECL 0

/*
 * This bit determines if any out-of-address-windows access from DMX is
 * denied or not
 * If this bit is 0: An access from DMX out-of-address-windows is passed
 * along
 * Else if this bit is 1: Any access from DMX out-of-address-windows causes
 * DMX_WIN_DFLT_DENY_EXCP to be asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_EXCP_STS</a> register
 */
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMX_WIN_DFLT_DENY_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMX_WIN_DFLT_DENY_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMX_WIN_DFLT_DENY_POS 1
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMX_WIN_DFLT_DENY_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMX_WIN_DFLT_DENY_DECL 1

/*
 * This bit determines if any out-of-address-windows access from DMAC_M1 is
 * denied or not
 * If this bit is 0: An access from DMAC_M1 out-of-address-windows is passed
 * along
 * Else if this bit is 1: Any access from DMAC_M1 out-of-address-windows
 * causes DMAC_M1_WIN_DFLT_DENY_EXCP to be asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_EXCP_STS</a> register
 */
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMAC_M1_WIN_DFLT_DENY_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMAC_M1_WIN_DFLT_DENY_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMAC_M1_WIN_DFLT_DENY_POS 3
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMAC_M1_WIN_DFLT_DENY_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DMAC_M1_WIN_DFLT_DENY_DECL 3

/*
 * This bit determines if any out-of-address-windows access from DEBUG is
 * denied or not
 * If this bit is 0: An access from DEBUG out-of-address-windows is passed
 * along
 * Else if this bit is 1: Any access from DEBUG out-of-address-windows causes
 * DEBUG_WIN_DFLT_DENY_EXCP to be asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_EXCP_STS</a> register
 */
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DEBUG_WIN_DFLT_DENY_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DEBUG_WIN_DFLT_DENY_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DEBUG_WIN_DFLT_DENY_POS 4
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DEBUG_WIN_DFLT_DENY_SIZE 1
#define IAXXX_GLBL_MEM_PAC_WIN_DFLT_DENY_PERM_DEBUG_WIN_DFLT_DENY_DECL 4

/*** GLBL_MEM_PAC_HMD_WIN_DENY_PERM (0x40024038) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_ADDR (0x40024038)
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_RESET_VAL 0x00000000

/*
 * If this bit is set to 0 then:
 * Read access within address window0 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window0 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN0_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN0_DECL 0

/*
 * If this bit is set to 0 then:
 * Read access within address window1 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window1 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN1_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN1_DECL 1

/*
 * If this bit is set to 0 then:
 * Read access within address window2 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window2 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN2_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN2_DECL 2

/*
 * If this bit is set to 0 then:
 * Read access within address window3 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window3 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN3_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN3_DECL 3

/*
 * If this bit is set to 0 then:
 * Read access within address window4 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window4 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN4_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN4_DECL 4

/*
 * If this bit is set to 0 then:
 * Read access within address window5 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window5 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN5_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN5_DECL 5

/*
 * If this bit is set to 0 then:
 * Read access within address window6 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window6 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN6_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN6_DECL 6

/*
 * If this bit is set to 0 then:
 * Read access within address window7 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window7 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN7_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN7_DECL 7

/*
 * If this bit is set to 0 then:
 * Read access within address window8 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window8 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN8_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN8_DECL 8

/*
 * If this bit is set to 0 then:
 * Read access within address window9 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window9 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN9_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN9_DECL 9

/*
 * If this bit is set to 0 then:
 * Read access within address window10 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window10 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN10_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN10_DECL 10

/*
 * If this bit is set to 0 then:
 * Read access within address window11 from HMD is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_WR_PERM">PAC_HMD_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window11 from HMD is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to HMD. WIN11_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_DENY_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_HMD_WIN_WR_PERM (0x4002403c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_ADDR (0x4002403c)
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_RESET_VAL 0x00000000

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN0_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN0_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN0_DECL 0

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN1_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN1_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN1_DECL 1

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN2_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN2_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN2_DECL 2

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN3_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN3_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN3_DECL 3

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN4_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN4_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN4_DECL 4

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN5_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN5_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN5_DECL 5

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN6_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN6_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN6_DECL 6

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN7_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN7_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN7_DECL 7

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN8_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN8_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN8_DECL 8

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN9_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN9_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN9_DECL 9

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN10_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN10_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN10_DECL 10

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN11_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_HMD_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_HMD_WIN_DENY_PERM">PAC_HMD_WIN11_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_WIN_WR_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DMX_WIN_DENY_PERM (0x40024040) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_ADDR (0x40024040)
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_RESET_VAL 0x00000000

/*
 * If this bit is set to 0 then:
 * Read access within address window0 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window0 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN0_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN0_DECL 0

/*
 * If this bit is set to 0 then:
 * Read access within address window1 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window1 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN1_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN1_DECL 1

/*
 * If this bit is set to 0 then:
 * Read access within address window2 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window2 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN2_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN2_DECL 2

/*
 * If this bit is set to 0 then:
 * Read access within address window3 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window3 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN3_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN3_DECL 3

/*
 * If this bit is set to 0 then:
 * Read access within address window4 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window4 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN4_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN4_DECL 4

/*
 * If this bit is set to 0 then:
 * Read access within address window5 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window5 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN5_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN5_DECL 5

/*
 * If this bit is set to 0 then:
 * Read access within address window6 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window6 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN6_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN6_DECL 6

/*
 * If this bit is set to 0 then:
 * Read access within address window7 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window7 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN7_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN7_DECL 7

/*
 * If this bit is set to 0 then:
 * Read access within address window8 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window8 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN8_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN8_DECL 8

/*
 * If this bit is set to 0 then:
 * Read access within address window9 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window9 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN9_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN9_DECL 9

/*
 * If this bit is set to 0 then:
 * Read access within address window10 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window10 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN10_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN10_DECL 10

/*
 * If this bit is set to 0 then:
 * Read access within address window11 from DMX is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_WR_PERM">PAC_DMX_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window11 from DMX is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMX. WIN11_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_DENY_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DMX_WIN_WR_PERM (0x40024044) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_ADDR (0x40024044)
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_RESET_VAL 0x00000000

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN0_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN0_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN0_DECL 0

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN1_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN1_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN1_DECL 1

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN2_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN2_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN2_DECL 2

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN3_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN3_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN3_DECL 3

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN4_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN4_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN4_DECL 4

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN5_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN5_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN5_DECL 5

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN6_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN6_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN6_DECL 6

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN7_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN7_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN7_DECL 7

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN8_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN8_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN8_DECL 8

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN9_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN9_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN9_DECL 9

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN10_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN10_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN10_DECL 10

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN11_DENY_WR_EXCP
 * asserted in <a href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMX_EXCP_STS</a>
 * register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMX_WIN_DENY_PERM">PAC_DMX_WIN11_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_WIN_WR_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM (0x40024048) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_ADDR (0x40024048)
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_RESET_VAL 0x00000000

/*
 * If this bit is set to 0 then:
 * Read access within address window0 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window0 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN0_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN0_DECL 0

/*
 * If this bit is set to 0 then:
 * Read access within address window1 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window1 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN1_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN1_DECL 1

/*
 * If this bit is set to 0 then:
 * Read access within address window2 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window2 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN2_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN2_DECL 2

/*
 * If this bit is set to 0 then:
 * Read access within address window3 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window3 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN3_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN3_DECL 3

/*
 * If this bit is set to 0 then:
 * Read access within address window4 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window4 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN4_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN4_DECL 4

/*
 * If this bit is set to 0 then:
 * Read access within address window5 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window5 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN5_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN5_DECL 5

/*
 * If this bit is set to 0 then:
 * Read access within address window6 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window6 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN6_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN6_DECL 6

/*
 * If this bit is set to 0 then:
 * Read access within address window7 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window7 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN7_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN7_DECL 7

/*
 * If this bit is set to 0 then:
 * Read access within address window8 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window8 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN8_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN8_DECL 8

/*
 * If this bit is set to 0 then:
 * Read access within address window9 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window9 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN9_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN9_DECL 9

/*
 * If this bit is set to 0 then:
 * Read access within address window10 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window10 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN10_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN10_DECL 10

/*
 * If this bit is set to 0 then:
 * Read access within address window11 from DMAC_M1 is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_WR_PERM">PAC_DMAC_M1_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window11 from DMAC_M1 is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DMAC_M1. WIN11_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_DENY_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM (0x4002404c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_ADDR (0x4002404c)
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_RESET_VAL 0x00000000

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN0_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN0_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN0_DECL 0

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN1_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN1_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN1_DECL 1

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN2_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN2_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN2_DECL 2

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN3_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN3_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN3_DECL 3

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN4_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN4_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN4_DECL 4

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN5_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN5_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN5_DECL 5

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN6_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN6_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN6_DECL 6

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN7_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN7_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN7_DECL 7

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN8_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN8_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN8_DECL 8

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN9_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN9_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN9_DECL 9

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN10_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN10_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN10_DECL 10

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN11_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DMAC_M1_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DMAC_M1_WIN_DENY_PERM">PAC_DMAC_M1_WIN11_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_WIN_WR_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM (0x40024050) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_ADDR (0x40024050)
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_RESET_VAL 0x00000000

/*
 * If this bit is set to 0 then:
 * Read access within address window0 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window0 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN0_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN0_DECL 0

/*
 * If this bit is set to 0 then:
 * Read access within address window1 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window1 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN1_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN1_DECL 1

/*
 * If this bit is set to 0 then:
 * Read access within address window2 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window2 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN2_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN2_DECL 2

/*
 * If this bit is set to 0 then:
 * Read access within address window3 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window3 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN3_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN3_DECL 3

/*
 * If this bit is set to 0 then:
 * Read access within address window4 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window4 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN4_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN4_DECL 4

/*
 * If this bit is set to 0 then:
 * Read access within address window5 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window5 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN5_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN5_DECL 5

/*
 * If this bit is set to 0 then:
 * Read access within address window6 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window6 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN6_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN6_DECL 6

/*
 * If this bit is set to 0 then:
 * Read access within address window7 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window7 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN7_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN7_DECL 7

/*
 * If this bit is set to 0 then:
 * Read access within address window8 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window8 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN8_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN8_DECL 8

/*
 * If this bit is set to 0 then:
 * Read access within address window9 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window9 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN9_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN9_DECL 9

/*
 * If this bit is set to 0 then:
 * Read access within address window10 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window10 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN10_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN10_DECL 10

/*
 * If this bit is set to 0 then:
 * Read access within address window11 from DEBUG is allowed;
 * Write access is determined by the corresponding bit in <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_WR_PERM">PAC_DEBUG_WIN_WR_PERM</a>
 * register
 * If this bit is set to 1 then :
 * Any access within address window11 from DEBUG is not propaged
 * Write access will not be allowed and read access will return data
 * 0xbadacc55 back to DEBUG. WIN11_DENY_EXCP is asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_GLBL_MEM_EXCP_STS">PAC_DEBUG_EXCP_STS</a>
 * register
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_DENY_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_DEBUG_WIN_WR_PERM (0x40024054) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_ADDR (0x40024054)
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_MASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_RMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WMASK_VAL 0x00000fff
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_RESET_VAL 0x00000000

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN0_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN0_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN0_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN0_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN0_POS 0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN0_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN0_DECL 0

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN1_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN1_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN1_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN1_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN1_POS 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN1_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN1_DECL 1

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN2_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN2_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN2_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN2_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN2_POS 2
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN2_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN2_DECL 2

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN3_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN3_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN3_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN3_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN3_POS 3
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN3_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN3_DECL 3

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN4_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN4_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN4_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN4_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN4_POS 4
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN4_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN4_DECL 4

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN5_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN5_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN5_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN5_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN5_POS 5
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN5_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN5_DECL 5

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN6_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN6_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN6_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN6_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN6_POS 6
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN6_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN6_DECL 6

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN7_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN7_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN7_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN7_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN7_POS 7
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN7_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN7_DECL 7

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN8_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN8_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN8_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN8_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN8_POS 8
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN8_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN8_DECL 8

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN9_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN9_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN9_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN9_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN9_POS 9
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN9_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN9_DECL 9

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN10_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN10_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN10_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN10_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN10_POS 10
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN10_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN10_DECL 10

/*
 * if this bit is set to 0 then:
 * Any write access is not allowed. A write attempt causes WIN11_DENY_WR_EXCP
 * asserted in <a
 * href="#Edradour.GLBL_MEM.PAC_EXCP_STS">PAC_DEBUG_EXCP_STS</a> register
 * If this bit is set to 1 and corresponding <a
 * href="#Edradour.GLBL_MEM.PAC_DEBUG_WIN_DENY_PERM">PAC_DEBUG_WIN11_DENY_PERM</a>
 * bit is 0 then:
 * Write access is allowed.
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN11_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN11_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN11_POS 11
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN11_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_WIN_WR_PERM_WIN11_DECL 11

/*** GLBL_MEM_PAC_EXCP_STS (0x40024058) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_ADDR (0x40024058)
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_MASK_VAL 0x0000003b
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_RMASK_VAL 0x0000003b
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WMASK_VAL 0x0000003b
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_RESET_VAL 0x00000000

/*
 * Set to 1 when HMD_WIN_DFLT_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_HMD_WIN_DFLT_DENY_EXCP_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_HMD_WIN_DFLT_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_HMD_WIN_DFLT_DENY_EXCP_POS 0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_HMD_WIN_DFLT_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_HMD_WIN_DFLT_DENY_EXCP_DECL 0

/*
 * Set to 1 when DMX_WIN_DFLT_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMX_WIN_DFLT_DENY_EXCP_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMX_WIN_DFLT_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMX_WIN_DFLT_DENY_EXCP_POS 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMX_WIN_DFLT_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMX_WIN_DFLT_DENY_EXCP_DECL 1

/*
 * Set to 1 when DMAC_M1_WIN_DFLT_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMAC_M1_WIN_DFLT_DENY_EXCP_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMAC_M1_WIN_DFLT_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMAC_M1_WIN_DFLT_DENY_EXCP_POS 3
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMAC_M1_WIN_DFLT_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DMAC_M1_WIN_DFLT_DENY_EXCP_DECL 3

/*
 * Set to 1 when DEBUG_WIN_DFLT_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DEBUG_WIN_DFLT_DENY_EXCP_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DEBUG_WIN_DFLT_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DEBUG_WIN_DFLT_DENY_EXCP_POS 4
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DEBUG_WIN_DFLT_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_DEBUG_WIN_DFLT_DENY_EXCP_DECL 4

/*
 * Set to 1 when programmed windows are overlapped. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WIN_PROG_FAULT_EXCP_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WIN_PROG_FAULT_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WIN_PROG_FAULT_EXCP_POS 5
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WIN_PROG_FAULT_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_STS_WIN_PROG_FAULT_EXCP_DECL 5

/*** GLBL_MEM_PAC_HMD_EXCP_STS (0x4002405c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_ADDR (0x4002405c)
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_MASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_RMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_RESET_VAL 0x00000000

/*
 * Set to 1 when WIN0_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_DENY_EXCP_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_DENY_EXCP_POS 0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_DENY_EXCP_DECL 0

/*
 * Set to 1 when WIN1_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_DENY_EXCP_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_DENY_EXCP_POS 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_DENY_EXCP_DECL 1

/*
 * Set to 1 when WIN2_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_DENY_EXCP_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_DENY_EXCP_POS 2
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_DENY_EXCP_DECL 2

/*
 * Set to 1 when WIN3_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_DENY_EXCP_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_DENY_EXCP_POS 3
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_DENY_EXCP_DECL 3

/*
 * Set to 1 when WIN4_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_DENY_EXCP_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_DENY_EXCP_POS 4
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_DENY_EXCP_DECL 4

/*
 * Set to 1 when WIN5_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_DENY_EXCP_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_DENY_EXCP_POS 5
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_DENY_EXCP_DECL 5

/*
 * Set to 1 when WIN6_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_DENY_EXCP_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_DENY_EXCP_POS 6
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_DENY_EXCP_DECL 6

/*
 * Set to 1 when WIN7_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_DENY_EXCP_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_DENY_EXCP_POS 7
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_DENY_EXCP_DECL 7

/*
 * Set to 1 when WIN8_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_DENY_EXCP_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_DENY_EXCP_POS 8
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_DENY_EXCP_DECL 8

/*
 * Set to 1 when WIN9_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_DENY_EXCP_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_DENY_EXCP_POS 9
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_DENY_EXCP_DECL 9

/*
 * Set to 1 when WIN10_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_DENY_EXCP_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_DENY_EXCP_POS 10
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_DENY_EXCP_DECL 10

/*
 * Set to 1 when WIN11_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_DENY_EXCP_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_DENY_EXCP_POS 11
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_DENY_EXCP_DECL 11

/*
 * Set to 1 when WIN0_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_WR_DENY_EXCP_MASK 0x00001000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_WR_DENY_EXCP_POS 12
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN0_WR_DENY_EXCP_DECL 12

/*
 * Set to 1 when WIN1_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_WR_DENY_EXCP_MASK 0x00002000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_WR_DENY_EXCP_POS 13
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN1_WR_DENY_EXCP_DECL 13

/*
 * Set to 1 when WIN2_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_WR_DENY_EXCP_MASK 0x00004000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_WR_DENY_EXCP_POS 14
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN2_WR_DENY_EXCP_DECL 14

/*
 * Set to 1 when WIN3_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_WR_DENY_EXCP_MASK 0x00008000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_WR_DENY_EXCP_POS 15
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN3_WR_DENY_EXCP_DECL 15

/*
 * Set to 1 when WIN4_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_WR_DENY_EXCP_MASK 0x00010000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_WR_DENY_EXCP_POS 16
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN4_WR_DENY_EXCP_DECL 16

/*
 * Set to 1 when WIN5_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_WR_DENY_EXCP_MASK 0x00020000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_WR_DENY_EXCP_POS 17
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN5_WR_DENY_EXCP_DECL 17

/*
 * Set to 1 when WIN6_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_WR_DENY_EXCP_MASK 0x00040000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_WR_DENY_EXCP_POS 18
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN6_WR_DENY_EXCP_DECL 18

/*
 * Set to 1 when WIN7_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_WR_DENY_EXCP_MASK 0x00080000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_WR_DENY_EXCP_POS 19
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN7_WR_DENY_EXCP_DECL 19

/*
 * Set to 1 when WIN8_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_WR_DENY_EXCP_MASK 0x00100000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_WR_DENY_EXCP_POS 20
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN8_WR_DENY_EXCP_DECL 20

/*
 * Set to 1 when WIN9_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_WR_DENY_EXCP_MASK 0x00200000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_WR_DENY_EXCP_POS 21
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN9_WR_DENY_EXCP_DECL 21

/*
 * Set to 1 when WIN10_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_WR_DENY_EXCP_MASK 0x00400000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_WR_DENY_EXCP_POS 22
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN10_WR_DENY_EXCP_DECL 22

/*
 * Set to 1 when WIN11_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_WR_DENY_EXCP_MASK 0x00800000
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_WR_DENY_EXCP_POS 23
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_HMD_EXCP_STS_WIN11_WR_DENY_EXCP_DECL 23

/*** GLBL_MEM_PAC_DMX_EXCP_STS (0x40024060) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_ADDR (0x40024060)
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_MASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_RMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_RESET_VAL 0x00000000

/*
 * Set to 1 when WIN0_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_DENY_EXCP_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_DENY_EXCP_POS 0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_DENY_EXCP_DECL 0

/*
 * Set to 1 when WIN1_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_DENY_EXCP_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_DENY_EXCP_POS 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_DENY_EXCP_DECL 1

/*
 * Set to 1 when WIN2_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_DENY_EXCP_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_DENY_EXCP_POS 2
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_DENY_EXCP_DECL 2

/*
 * Set to 1 when WIN3_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_DENY_EXCP_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_DENY_EXCP_POS 3
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_DENY_EXCP_DECL 3

/*
 * Set to 1 when WIN4_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_DENY_EXCP_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_DENY_EXCP_POS 4
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_DENY_EXCP_DECL 4

/*
 * Set to 1 when WIN5_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_DENY_EXCP_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_DENY_EXCP_POS 5
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_DENY_EXCP_DECL 5

/*
 * Set to 1 when WIN6_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_DENY_EXCP_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_DENY_EXCP_POS 6
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_DENY_EXCP_DECL 6

/*
 * Set to 1 when WIN7_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_DENY_EXCP_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_DENY_EXCP_POS 7
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_DENY_EXCP_DECL 7

/*
 * Set to 1 when WIN8_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_DENY_EXCP_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_DENY_EXCP_POS 8
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_DENY_EXCP_DECL 8

/*
 * Set to 1 when WIN9_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_DENY_EXCP_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_DENY_EXCP_POS 9
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_DENY_EXCP_DECL 9

/*
 * Set to 1 when WIN10_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_DENY_EXCP_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_DENY_EXCP_POS 10
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_DENY_EXCP_DECL 10

/*
 * Set to 1 when WIN11_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_DENY_EXCP_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_DENY_EXCP_POS 11
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_DENY_EXCP_DECL 11

/*
 * Set to 1 when WIN0_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_WR_DENY_EXCP_MASK 0x00001000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_WR_DENY_EXCP_POS 12
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN0_WR_DENY_EXCP_DECL 12

/*
 * Set to 1 when WIN1_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_WR_DENY_EXCP_MASK 0x00002000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_WR_DENY_EXCP_POS 13
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN1_WR_DENY_EXCP_DECL 13

/*
 * Set to 1 when WIN2_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_WR_DENY_EXCP_MASK 0x00004000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_WR_DENY_EXCP_POS 14
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN2_WR_DENY_EXCP_DECL 14

/*
 * Set to 1 when WIN3_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_WR_DENY_EXCP_MASK 0x00008000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_WR_DENY_EXCP_POS 15
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN3_WR_DENY_EXCP_DECL 15

/*
 * Set to 1 when WIN4_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_WR_DENY_EXCP_MASK 0x00010000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_WR_DENY_EXCP_POS 16
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN4_WR_DENY_EXCP_DECL 16

/*
 * Set to 1 when WIN5_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_WR_DENY_EXCP_MASK 0x00020000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_WR_DENY_EXCP_POS 17
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN5_WR_DENY_EXCP_DECL 17

/*
 * Set to 1 when WIN6_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_WR_DENY_EXCP_MASK 0x00040000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_WR_DENY_EXCP_POS 18
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN6_WR_DENY_EXCP_DECL 18

/*
 * Set to 1 when WIN7_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_WR_DENY_EXCP_MASK 0x00080000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_WR_DENY_EXCP_POS 19
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN7_WR_DENY_EXCP_DECL 19

/*
 * Set to 1 when WIN8_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_WR_DENY_EXCP_MASK 0x00100000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_WR_DENY_EXCP_POS 20
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN8_WR_DENY_EXCP_DECL 20

/*
 * Set to 1 when WIN9_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_WR_DENY_EXCP_MASK 0x00200000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_WR_DENY_EXCP_POS 21
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN9_WR_DENY_EXCP_DECL 21

/*
 * Set to 1 when WIN10_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_WR_DENY_EXCP_MASK 0x00400000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_WR_DENY_EXCP_POS 22
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN10_WR_DENY_EXCP_DECL 22

/*
 * Set to 1 when WIN11_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_WR_DENY_EXCP_MASK 0x00800000
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_WR_DENY_EXCP_POS 23
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMX_EXCP_STS_WIN11_WR_DENY_EXCP_DECL 23

/*** GLBL_MEM_PAC_DMAC_M1_EXCP_STS (0x40024064) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_ADDR (0x40024064)
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_MASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_RMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_RESET_VAL 0x00000000

/*
 * Set to 1 when WIN0_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_DENY_EXCP_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_DENY_EXCP_POS 0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_DENY_EXCP_DECL 0

/*
 * Set to 1 when WIN1_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_DENY_EXCP_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_DENY_EXCP_POS 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_DENY_EXCP_DECL 1

/*
 * Set to 1 when WIN2_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_DENY_EXCP_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_DENY_EXCP_POS 2
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_DENY_EXCP_DECL 2

/*
 * Set to 1 when WIN3_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_DENY_EXCP_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_DENY_EXCP_POS 3
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_DENY_EXCP_DECL 3

/*
 * Set to 1 when WIN4_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_DENY_EXCP_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_DENY_EXCP_POS 4
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_DENY_EXCP_DECL 4

/*
 * Set to 1 when WIN5_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_DENY_EXCP_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_DENY_EXCP_POS 5
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_DENY_EXCP_DECL 5

/*
 * Set to 1 when WIN6_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_DENY_EXCP_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_DENY_EXCP_POS 6
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_DENY_EXCP_DECL 6

/*
 * Set to 1 when WIN7_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_DENY_EXCP_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_DENY_EXCP_POS 7
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_DENY_EXCP_DECL 7

/*
 * Set to 1 when WIN8_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_DENY_EXCP_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_DENY_EXCP_POS 8
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_DENY_EXCP_DECL 8

/*
 * Set to 1 when WIN9_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_DENY_EXCP_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_DENY_EXCP_POS 9
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_DENY_EXCP_DECL 9

/*
 * Set to 1 when WIN10_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_DENY_EXCP_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_DENY_EXCP_POS 10
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_DENY_EXCP_DECL 10

/*
 * Set to 1 when WIN11_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_DENY_EXCP_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_DENY_EXCP_POS 11
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_DENY_EXCP_DECL 11

/*
 * Set to 1 when WIN0_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_WR_DENY_EXCP_MASK 0x00001000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_WR_DENY_EXCP_POS 12
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN0_WR_DENY_EXCP_DECL 12

/*
 * Set to 1 when WIN1_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_WR_DENY_EXCP_MASK 0x00002000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_WR_DENY_EXCP_POS 13
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN1_WR_DENY_EXCP_DECL 13

/*
 * Set to 1 when WIN2_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_WR_DENY_EXCP_MASK 0x00004000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_WR_DENY_EXCP_POS 14
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN2_WR_DENY_EXCP_DECL 14

/*
 * Set to 1 when WIN3_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_WR_DENY_EXCP_MASK 0x00008000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_WR_DENY_EXCP_POS 15
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN3_WR_DENY_EXCP_DECL 15

/*
 * Set to 1 when WIN4_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_WR_DENY_EXCP_MASK 0x00010000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_WR_DENY_EXCP_POS 16
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN4_WR_DENY_EXCP_DECL 16

/*
 * Set to 1 when WIN5_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_WR_DENY_EXCP_MASK 0x00020000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_WR_DENY_EXCP_POS 17
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN5_WR_DENY_EXCP_DECL 17

/*
 * Set to 1 when WIN6_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_WR_DENY_EXCP_MASK 0x00040000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_WR_DENY_EXCP_POS 18
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN6_WR_DENY_EXCP_DECL 18

/*
 * Set to 1 when WIN7_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_WR_DENY_EXCP_MASK 0x00080000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_WR_DENY_EXCP_POS 19
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN7_WR_DENY_EXCP_DECL 19

/*
 * Set to 1 when WIN8_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_WR_DENY_EXCP_MASK 0x00100000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_WR_DENY_EXCP_POS 20
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN8_WR_DENY_EXCP_DECL 20

/*
 * Set to 1 when WIN9_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_WR_DENY_EXCP_MASK 0x00200000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_WR_DENY_EXCP_POS 21
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN9_WR_DENY_EXCP_DECL 21

/*
 * Set to 1 when WIN10_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_WR_DENY_EXCP_MASK 0x00400000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_WR_DENY_EXCP_POS 22
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN10_WR_DENY_EXCP_DECL 22

/*
 * Set to 1 when WIN11_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_WR_DENY_EXCP_MASK 0x00800000
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_WR_DENY_EXCP_POS 23
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DMAC_M1_EXCP_STS_WIN11_WR_DENY_EXCP_DECL 23

/*** GLBL_MEM_PAC_DEBUG_EXCP_STS (0x40024068) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_ADDR (0x40024068)
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_MASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_RMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WMASK_VAL 0x00ffffff
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_RESET_VAL 0x00000000

/*
 * Set to 1 when WIN0_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_DENY_EXCP_MASK 0x00000001
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_DENY_EXCP_POS 0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_DENY_EXCP_DECL 0

/*
 * Set to 1 when WIN1_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_DENY_EXCP_MASK 0x00000002
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_DENY_EXCP_POS 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_DENY_EXCP_DECL 1

/*
 * Set to 1 when WIN2_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_DENY_EXCP_MASK 0x00000004
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_DENY_EXCP_POS 2
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_DENY_EXCP_DECL 2

/*
 * Set to 1 when WIN3_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_DENY_EXCP_MASK 0x00000008
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_DENY_EXCP_POS 3
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_DENY_EXCP_DECL 3

/*
 * Set to 1 when WIN4_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_DENY_EXCP_MASK 0x00000010
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_DENY_EXCP_POS 4
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_DENY_EXCP_DECL 4

/*
 * Set to 1 when WIN5_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_DENY_EXCP_MASK 0x00000020
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_DENY_EXCP_POS 5
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_DENY_EXCP_DECL 5

/*
 * Set to 1 when WIN6_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_DENY_EXCP_MASK 0x00000040
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_DENY_EXCP_POS 6
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_DENY_EXCP_DECL 6

/*
 * Set to 1 when WIN7_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_DENY_EXCP_MASK 0x00000080
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_DENY_EXCP_POS 7
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_DENY_EXCP_DECL 7

/*
 * Set to 1 when WIN8_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_DENY_EXCP_MASK 0x00000100
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_DENY_EXCP_POS 8
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_DENY_EXCP_DECL 8

/*
 * Set to 1 when WIN9_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_DENY_EXCP_MASK 0x00000200
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_DENY_EXCP_POS 9
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_DENY_EXCP_DECL 9

/*
 * Set to 1 when WIN10_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_DENY_EXCP_MASK 0x00000400
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_DENY_EXCP_POS 10
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_DENY_EXCP_DECL 10

/*
 * Set to 1 when WIN11_DENY_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_DENY_EXCP_MASK 0x00000800
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_DENY_EXCP_POS 11
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_DENY_EXCP_DECL 11

/*
 * Set to 1 when WIN0_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_WR_DENY_EXCP_MASK 0x00001000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_WR_DENY_EXCP_POS 12
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN0_WR_DENY_EXCP_DECL 12

/*
 * Set to 1 when WIN1_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_WR_DENY_EXCP_MASK 0x00002000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_WR_DENY_EXCP_POS 13
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN1_WR_DENY_EXCP_DECL 13

/*
 * Set to 1 when WIN2_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_WR_DENY_EXCP_MASK 0x00004000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_WR_DENY_EXCP_POS 14
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN2_WR_DENY_EXCP_DECL 14

/*
 * Set to 1 when WIN3_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_WR_DENY_EXCP_MASK 0x00008000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_WR_DENY_EXCP_POS 15
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN3_WR_DENY_EXCP_DECL 15

/*
 * Set to 1 when WIN4_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_WR_DENY_EXCP_MASK 0x00010000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_WR_DENY_EXCP_POS 16
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN4_WR_DENY_EXCP_DECL 16

/*
 * Set to 1 when WIN5_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_WR_DENY_EXCP_MASK 0x00020000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_WR_DENY_EXCP_POS 17
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN5_WR_DENY_EXCP_DECL 17

/*
 * Set to 1 when WIN6_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_WR_DENY_EXCP_MASK 0x00040000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_WR_DENY_EXCP_POS 18
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN6_WR_DENY_EXCP_DECL 18

/*
 * Set to 1 when WIN7_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_WR_DENY_EXCP_MASK 0x00080000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_WR_DENY_EXCP_POS 19
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN7_WR_DENY_EXCP_DECL 19

/*
 * Set to 1 when WIN8_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_WR_DENY_EXCP_MASK 0x00100000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_WR_DENY_EXCP_POS 20
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN8_WR_DENY_EXCP_DECL 20

/*
 * Set to 1 when WIN9_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_WR_DENY_EXCP_MASK 0x00200000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_WR_DENY_EXCP_POS 21
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN9_WR_DENY_EXCP_DECL 21

/*
 * Set to 1 when WIN10_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_WR_DENY_EXCP_MASK 0x00400000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_WR_DENY_EXCP_POS 22
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN10_WR_DENY_EXCP_DECL 22

/*
 * Set to 1 when WIN11_WR_EXCP is asserted. Write 1 to clear
 */
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_WR_DENY_EXCP_MASK 0x00800000
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_WR_DENY_EXCP_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_WR_DENY_EXCP_POS 23
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_WR_DENY_EXCP_SIZE 1
#define IAXXX_GLBL_MEM_PAC_DEBUG_EXCP_STS_WIN11_WR_DENY_EXCP_DECL 23

/*** GLBL_MEM_PAC_EXCP_LATCH (0x4002406c) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR (0x4002406c)
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_MASK_VAL 0xffffffff
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_RMASK_VAL 0xffffffff
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WMASK_VAL 0x80000000
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_RESET_VAL 0x43c00000

/*
 * Set to the system address from AHB bridge, [(31:10)] that causes the first
 * processor exception.
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR_MASK 0x003fffff
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR_POS 0
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR_SIZE 22
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_ADDR_DECL (21:0)

/*
 * These 4 bits records the AHB master ID that causes the first processor
 * exception:
 * HMD=4'b0100; DMX=4'b0101; DMA_M0=4'b0110, DMA_M1=4'b0111;
 * These bits are reset and cleared to be 4'b1111. When it is 4'b1111 it
 * means no exception has occurred since last reset or clear
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_HMASTER_ID_MASK 0x03c00000
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_HMASTER_ID_RESET_VAL 0xf
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_HMASTER_ID_POS 22
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_HMASTER_ID_SIZE 4
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_HMASTER_ID_DECL (25:22)

/*
 * These 5 bits records the AHB window number that causes the first processor
 * exception:
 * win0=5'b00000; win1=5'b00001; win2=5'b00010; ..., win11=5'b01011
 * out_of_all_windows=5'b01111
 * These bits are reset and cleared to be 5'b10000. When these bits are
 * 5'b100000, it means no exception has occurred since last reset of clear
 * The valid read-back value is: 5'b00000 through 5'b01011, 5'b01111 and
 * 5'b10000
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WIN_MASK 0x7c000000
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WIN_RESET_VAL 0x10
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WIN_POS 26
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WIN_SIZE 5
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_WIN_DECL (30:26)

/*
 * Write 1 to this register to clear PAC_EXCP_LATCH.ADDR,
 * PAC_EXCP_LATCH.HMASTER_ID,PAC_EXCP_LATCH.WIN. This bit need to be reset
 * back to 0 for PAC to latch the next exception ADDR, HMASTER_ID and WIN
 */
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_CLR_MASK 0x80000000
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_CLR_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_CLR_POS 31
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_CLR_SIZE 1
#define IAXXX_GLBL_MEM_PAC_EXCP_LATCH_CLR_DECL 31

/*** GLBL_MEM_PAC_DUMMY (0x40024070) ***/
/*
 */
#define IAXXX_GLBL_MEM_PAC_DUMMY_ADDR (0x40024070)
#define IAXXX_GLBL_MEM_PAC_DUMMY_MASK_VAL 0xffffffff
#define IAXXX_GLBL_MEM_PAC_DUMMY_RMASK_VAL 0xffffffff
#define IAXXX_GLBL_MEM_PAC_DUMMY_WMASK_VAL 0xffffffff
#define IAXXX_GLBL_MEM_PAC_DUMMY_RESET_VAL 0x00000000

/*
 * Debug register
 */
#define IAXXX_GLBL_MEM_PAC_DUMMY_PAC_DUMMY_MASK 0xffffffff
#define IAXXX_GLBL_MEM_PAC_DUMMY_PAC_DUMMY_RESET_VAL 0x0
#define IAXXX_GLBL_MEM_PAC_DUMMY_PAC_DUMMY_POS 0
#define IAXXX_GLBL_MEM_PAC_DUMMY_PAC_DUMMY_SIZE 32
#define IAXXX_GLBL_MEM_PAC_DUMMY_PAC_DUMMY_DECL (31:0)

/* Number of registers in the module */
#define IAXXX_GLBL_MEM_REG_NUM 29

#endif /* __IAXXX_REGISTER_DEFS_GLBL_MEM_H__*/
