/*
 * iaxxx-register-defs-ioctrl.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/

#ifndef __IAXXX_REGISTER_DEFS_IO_CTRL_H__
#define __IAXXX_REGISTER_DEFS_IO_CTRL_H__

/*** The base address for this set of registers ***/
#define IAXXX_IO_CTRL_REGS_ADDR (0x40022000)

/*** IO_CTRL_CLK_IN (0x40022000) ***/
/*
 * This register is used for pad CLK_IN's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_CLK_IN_ADDR (0x40022000)
#define IAXXX_IO_CTRL_CLK_IN_MASK_VAL 0x0400003f
#define IAXXX_IO_CTRL_CLK_IN_RMASK_VAL 0x0400003f
#define IAXXX_IO_CTRL_CLK_IN_WMASK_VAL 0x0400003f
#define IAXXX_IO_CTRL_CLK_IN_RESET_VAL 0x0000003f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad CLK_IN.
 *   0x15: gpio_24
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_CLK_IN_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_CLK_IN_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_CLK_IN_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_CLK_IN_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_CLK_IN_MUX_SEL_DECL (4:0)

/*
 * This field is used to control SYS_CLK_IN_AND_SEL for pad CLK_IN, a
 * separate receiver enable for the SYS_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_CLK_IN_SYS_CLK_IN_AND_SEL_MASK 0x00000020
#define IAXXX_IO_CTRL_CLK_IN_SYS_CLK_IN_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_CLK_IN_SYS_CLK_IN_AND_SEL_POS 5
#define IAXXX_IO_CTRL_CLK_IN_SYS_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_CLK_IN_SYS_CLK_IN_AND_SEL_DECL 5

/*
 * This field is used to control GPIO_24_AND_SEL for pad CLK_IN, a separate
 * receiver enable for the GPIO_24 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_CLK_IN_GPIO_24_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_CLK_IN_GPIO_24_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_CLK_IN_GPIO_24_AND_SEL_POS 26
#define IAXXX_IO_CTRL_CLK_IN_GPIO_24_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_CLK_IN_GPIO_24_AND_SEL_DECL 26

/*** IO_CTRL_COMMA_0 (0x40022004) ***/
/*
 * This register is used for pad COMMA_0's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMA_0_ADDR (0x40022004)
#define IAXXX_IO_CTRL_COMMA_0_MASK_VAL 0x1c7ada1f
#define IAXXX_IO_CTRL_COMMA_0_RMASK_VAL 0x1c7ada1f
#define IAXXX_IO_CTRL_COMMA_0_WMASK_VAL 0x1c7ada1f
#define IAXXX_IO_CTRL_COMMA_0_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMA_0.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm1_bclk
 *   0xc: pcm2_dt
 *   0xe: i2c0_clk
 *   0x11: spi0_cs0_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_4
 *   0x16: dmx_fo_4
 *   0x17: hmd_fo_4
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMA_0_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMA_0_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMA_0_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMA_0_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMA_0_MUX_SEL_DECL (4:0)

/*
 * Function ref3_clk2cnr can be selected through the following pads:
 *   COMMA_0
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF3_CLK2CNR_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the REF3_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_REF3_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_COMMA_0_REF3_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_REF3_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_COMMA_0_REF3_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_REF3_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMA_0_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMA_0_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_COMMA_0_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_COMMA_0_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMA_0_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMA_0_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_COMMA_0_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_COMMA_0_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_CDC0_CLK_AND_SEL_DECL 15

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMA_0_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMA_0_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_PCM2_DR_AND_SEL_DECL 17

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMA_0_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMA_0_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_COMMA_0_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_COMMA_0_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_COMMA_0_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_COMMA_0_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_cs0_n can be selected through the following pads:
 *   COMMA_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CS0_N_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the SPI0_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_SPI0_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMA_0_SPI0_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_SPI0_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMA_0_SPI0_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_SPI0_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_4_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the GPIO_4 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_GPIO_4_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMA_0_GPIO_4_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMA_0_GPIO_4_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMA_0_GPIO_4_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_GPIO_4_AND_SEL_DECL 26

/*
 * This field is used to control FI_4_AND_SEL for pad COMMA_0, a separate
 * receiver enable for the FI_4 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_FI_4_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMA_0_FI_4_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_FI_4_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMA_0_FI_4_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_FI_4_AND_SEL_DECL 27

/*
 * Function io2stmr_4_12_20 can be selected through the following pads:
 *   COMMA_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_4_12_20_AND_SEL for pad COMMA_0, a
 * separate receiver enable for the IO2STMR_4_12_20 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_0_IO2STMR_4_12_20_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMA_0_IO2STMR_4_12_20_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_0_IO2STMR_4_12_20_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMA_0_IO2STMR_4_12_20_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_0_IO2STMR_4_12_20_AND_SEL_DECL 28

/*** IO_CTRL_COMMA_1 (0x40022008) ***/
/*
 * This register is used for pad COMMA_1's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMA_1_ADDR (0x40022008)
#define IAXXX_IO_CTRL_COMMA_1_MASK_VAL 0x1c4b481f
#define IAXXX_IO_CTRL_COMMA_1_RMASK_VAL 0x1c4b481f
#define IAXXX_IO_CTRL_COMMA_1_WMASK_VAL 0x1c4b481f
#define IAXXX_IO_CTRL_COMMA_1_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMA_1.
 *   0x6: dmic_do1
 *   0xb: cic_combo_ext_sync_out
 *   0xc: pcm2_dt
 *   0xe: i2c0_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi0_mosi
 *   0x13: spi1_cs1_n
 *   0x15: gpio_5
 *   0x16: dmx_fo_5
 *   0x17: hmd_fo_5
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMA_1_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMA_1_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMA_1_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMA_1_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMA_1_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad COMMA_1, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMA_1_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMA_1_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad COMMA_1, a
 * separate receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMA_1_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMA_1_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * COMMA_1, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_COMMA_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_COMMA_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad COMMA_1, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMA_1_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMA_1_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_PCM2_DR_AND_SEL_DECL 17

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad COMMA_1, a
 * separate receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMA_1_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMA_1_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function spi0_mosi can be selected through the following pads:
 *   COMMA_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MOSI_AND_SEL for pad COMMA_1, a
 * separate receiver enable for the SPI0_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_SPI0_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMA_1_SPI0_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_SPI0_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMA_1_SPI0_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_SPI0_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_5_AND_SEL for pad COMMA_1, a separate
 * receiver enable for the GPIO_5 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_GPIO_5_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMA_1_GPIO_5_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMA_1_GPIO_5_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMA_1_GPIO_5_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_GPIO_5_AND_SEL_DECL 26

/*
 * This field is used to control FI_5_AND_SEL for pad COMMA_1, a separate
 * receiver enable for the FI_5 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_FI_5_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMA_1_FI_5_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_FI_5_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMA_1_FI_5_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_FI_5_AND_SEL_DECL 27

/*
 * Function io2stmr_5_13_21 can be selected through the following pads:
 *   COMMA_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_5_13_21_AND_SEL for pad COMMA_1, a
 * separate receiver enable for the IO2STMR_5_13_21 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_1_IO2STMR_5_13_21_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMA_1_IO2STMR_5_13_21_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_1_IO2STMR_5_13_21_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMA_1_IO2STMR_5_13_21_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_1_IO2STMR_5_13_21_AND_SEL_DECL 28

/*** IO_CTRL_COMMA_2 (0x4002200c) ***/
/*
 * This register is used for pad COMMA_2's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMA_2_ADDR (0x4002200c)
#define IAXXX_IO_CTRL_COMMA_2_MASK_VAL 0x1c7b481f
#define IAXXX_IO_CTRL_COMMA_2_RMASK_VAL 0x1c7b481f
#define IAXXX_IO_CTRL_COMMA_2_WMASK_VAL 0x1c7b481f
#define IAXXX_IO_CTRL_COMMA_2_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMA_2.
 *   0x6: dmic_do0
 *   0xb: cic_combo_ext_sync_out
 *   0xc: pcm2_dt
 *   0xe: i2c1_data
 *   0x11: spi0_miso
 *   0x13: spi1_cs2_n
 *   0x15: gpio_6
 *   0x16: dmx_fo_6
 *   0x17: hmd_fo_6
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMA_2_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMA_2_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMA_2_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMA_2_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMA_2_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad COMMA_2, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMA_2_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMA_2_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMA_2_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMA_2_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * COMMA_2, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_COMMA_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_COMMA_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad COMMA_2, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMA_2_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMA_2_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_PCM2_DR_AND_SEL_DECL 17

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMA_2_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMA_2_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_COMMA_2_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_COMMA_2_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_COMMA_2_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_COMMA_2_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_miso can be selected through the following pads:
 *   COMMA_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MISO_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the SPI0_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_SPI0_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMA_2_SPI0_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_SPI0_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMA_2_SPI0_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_SPI0_MISO_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_6_AND_SEL for pad COMMA_2, a separate
 * receiver enable for the GPIO_6 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_GPIO_6_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMA_2_GPIO_6_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMA_2_GPIO_6_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMA_2_GPIO_6_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_GPIO_6_AND_SEL_DECL 26

/*
 * This field is used to control FI_6_AND_SEL for pad COMMA_2, a separate
 * receiver enable for the FI_6 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_FI_6_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMA_2_FI_6_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_FI_6_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMA_2_FI_6_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_FI_6_AND_SEL_DECL 27

/*
 * Function io2stmr_6_14_22 can be selected through the following pads:
 *   COMMA_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_6_14_22_AND_SEL for pad COMMA_2, a
 * separate receiver enable for the IO2STMR_6_14_22 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_2_IO2STMR_6_14_22_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMA_2_IO2STMR_6_14_22_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_2_IO2STMR_6_14_22_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMA_2_IO2STMR_6_14_22_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_2_IO2STMR_6_14_22_AND_SEL_DECL 28

/*** IO_CTRL_COMMA_3 (0x40022010) ***/
/*
 * This register is used for pad COMMA_3's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMA_3_ADDR (0x40022010)
#define IAXXX_IO_CTRL_COMMA_3_MASK_VAL 0x1c4ada1f
#define IAXXX_IO_CTRL_COMMA_3_RMASK_VAL 0x1c4ada1f
#define IAXXX_IO_CTRL_COMMA_3_WMASK_VAL 0x1c4ada1f
#define IAXXX_IO_CTRL_COMMA_3_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMA_3.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm2_bclk
 *   0xc: pcm2_dt
 *   0xe: i2c1_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi0_clk
 *   0x13: spi1_cs3_n
 *   0x15: gpio_7
 *   0x16: dmx_fo_7
 *   0x17: hmd_fo_7
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMA_3_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMA_3_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMA_3_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMA_3_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMA_3_MUX_SEL_DECL (4:0)

/*
 * Function ref4_clk2cnr can be selected through the following pads:
 *   COMMA_3
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF4_CLK2CNR_AND_SEL for pad COMMA_3, a
 * separate receiver enable for the REF4_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_REF4_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_COMMA_3_REF4_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_REF4_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_COMMA_3_REF4_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_REF4_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMA_3_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMA_3_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_COMMA_3_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_COMMA_3_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad COMMA_3, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMA_3_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMA_3_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_COMMA_3_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_COMMA_3_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMA_3_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMA_3_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_PCM2_DR_AND_SEL_DECL 17

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMA_3_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMA_3_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function spi0_clk can be selected through the following pads:
 *   COMMA_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CLK_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the SPI0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_SPI0_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMA_3_SPI0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_SPI0_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMA_3_SPI0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_SPI0_CLK_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_7_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the GPIO_7 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_GPIO_7_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMA_3_GPIO_7_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMA_3_GPIO_7_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMA_3_GPIO_7_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_GPIO_7_AND_SEL_DECL 26

/*
 * This field is used to control FI_7_AND_SEL for pad COMMA_3, a separate
 * receiver enable for the FI_7 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_FI_7_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMA_3_FI_7_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_FI_7_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMA_3_FI_7_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_FI_7_AND_SEL_DECL 27

/*
 * Function io2stmr_7_15_23 can be selected through the following pads:
 *   COMMA_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_7_15_23_AND_SEL for pad COMMA_3, a
 * separate receiver enable for the IO2STMR_7_15_23 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMA_3_IO2STMR_7_15_23_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMA_3_IO2STMR_7_15_23_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMA_3_IO2STMR_7_15_23_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMA_3_IO2STMR_7_15_23_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMA_3_IO2STMR_7_15_23_AND_SEL_DECL 28

/*** IO_CTRL_COMMB_0 (0x40022014) ***/
/*
 * This register is used for pad COMMB_0's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMB_0_ADDR (0x40022014)
#define IAXXX_IO_CTRL_COMMB_0_MASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_COMMB_0_RMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_COMMB_0_WMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_COMMB_0_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMB_0.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm3_bclk
 *   0x8: dmic_pt0_clk_out
 *   0xd: pcm_pt0_bclk
 *   0xe: i2c1_clk
 *   0x11: spi1_cs0_n
 *   0x12: spi0_cs1_n
 *   0x15: gpio_8
 *   0x16: dmx_fo_8
 *   0x17: hmd_fo_8
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMB_0_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMB_0_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMB_0_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMB_0_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMB_0_MUX_SEL_DECL (4:0)

/*
 * Function ref5_clk2cnr can be selected through the following pads:
 *   COMMB_0
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF5_CLK2CNR_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the REF5_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_REF5_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_COMMB_0_REF5_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_REF5_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_COMMB_0_REF5_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_REF5_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMB_0_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMB_0_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_COMMB_0_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_COMMB_0_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMB_0_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMB_0_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_COMMB_0_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_COMMB_0_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_CDC0_CLK_AND_SEL_DECL 15

/*
 * Function pcm0_bclk can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_BCLK_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the PCM0_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_PCM0_BCLK_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMB_0_PCM0_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_PCM0_BCLK_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMB_0_PCM0_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_PCM0_BCLK_AND_SEL_DECL 17

/*
 * Function pcm_pt0_bclk can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_BCLK_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the PCM_PT0_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_PCM_PT0_BCLK_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_COMMB_0_PCM_PT0_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_PCM_PT0_BCLK_AND_SEL_POS 18
#define IAXXX_IO_CTRL_COMMB_0_PCM_PT0_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_PCM_PT0_BCLK_AND_SEL_DECL 18

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMB_0_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMB_0_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_COMMB_0_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_COMMB_0_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_COMMB_0_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_COMMB_0_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_cs0_n can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CS0_N_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the SPI1_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_SPI1_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMB_0_SPI1_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_SPI1_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMB_0_SPI1_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_SPI1_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_8_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the GPIO_8 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_GPIO_8_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMB_0_GPIO_8_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_0_GPIO_8_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMB_0_GPIO_8_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_GPIO_8_AND_SEL_DECL 26

/*
 * This field is used to control FI_8_AND_SEL for pad COMMB_0, a separate
 * receiver enable for the FI_8 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_FI_8_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMB_0_FI_8_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_0_FI_8_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMB_0_FI_8_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_FI_8_AND_SEL_DECL 27

/*
 * Function io2stmr_0_8_16 can be selected through the following pads:
 *   COMMB_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_0_8_16_AND_SEL for pad COMMB_0, a
 * separate receiver enable for the IO2STMR_0_8_16 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_0_IO2STMR_0_8_16_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMB_0_IO2STMR_0_8_16_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_0_IO2STMR_0_8_16_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMB_0_IO2STMR_0_8_16_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_0_IO2STMR_0_8_16_AND_SEL_DECL 28

/*** IO_CTRL_COMMB_1 (0x40022018) ***/
/*
 * This register is used for pad COMMB_1's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMB_1_ADDR (0x40022018)
#define IAXXX_IO_CTRL_COMMB_1_MASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_COMMB_1_RMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_COMMB_1_WMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_COMMB_1_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMB_1.
 *   0x5: i2s_pcm3_fs
 *   0x6: dmic_do0
 *   0x8: dmic_pt0_do
 *   0xb: cic_combo_ext_sync_out
 *   0xd: pcm_pt0_fs
 *   0xe: i2c1_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi1_mosi
 *   0x12: spi0_cs1_n
 *   0x14: afg_sda
 *   0x15: gpio_9
 *   0x16: dmx_fo_9
 *   0x17: hmd_fo_9
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMB_1_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMB_1_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMB_1_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMB_1_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMB_1_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad COMMB_1, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMB_1_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMB_1_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad COMMB_1, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMB_1_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMB_1_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * COMMB_1, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_COMMB_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_COMMB_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm0_fs can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_FS_AND_SEL for pad COMMB_1, a separate
 * receiver enable for the PCM0_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_PCM0_FS_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMB_1_PCM0_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_PCM0_FS_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMB_1_PCM0_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_PCM0_FS_AND_SEL_DECL 17

/*
 * Function pcm_pt0_fs can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_FS_AND_SEL for pad COMMB_1, a
 * separate receiver enable for the PCM_PT0_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_PCM_PT0_FS_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_COMMB_1_PCM_PT0_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_PCM_PT0_FS_AND_SEL_POS 18
#define IAXXX_IO_CTRL_COMMB_1_PCM_PT0_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_PCM_PT0_FS_AND_SEL_DECL 18

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad COMMB_1, a
 * separate receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMB_1_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMB_1_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function spi1_mosi can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MOSI_AND_SEL for pad COMMB_1, a
 * separate receiver enable for the SPI1_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_SPI1_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMB_1_SPI1_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_SPI1_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMB_1_SPI1_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_SPI1_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_9_AND_SEL for pad COMMB_1, a separate
 * receiver enable for the GPIO_9 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_GPIO_9_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMB_1_GPIO_9_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_1_GPIO_9_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMB_1_GPIO_9_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_GPIO_9_AND_SEL_DECL 26

/*
 * This field is used to control FI_9_AND_SEL for pad COMMB_1, a separate
 * receiver enable for the FI_9 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_FI_9_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMB_1_FI_9_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_1_FI_9_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMB_1_FI_9_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_FI_9_AND_SEL_DECL 27

/*
 * Function io2stmr_1_9_17 can be selected through the following pads:
 *   COMMB_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_1_9_17_AND_SEL for pad COMMB_1, a
 * separate receiver enable for the IO2STMR_1_9_17 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_1_IO2STMR_1_9_17_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMB_1_IO2STMR_1_9_17_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_1_IO2STMR_1_9_17_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMB_1_IO2STMR_1_9_17_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_1_IO2STMR_1_9_17_AND_SEL_DECL 28

/*** IO_CTRL_COMMB_2 (0x4002201c) ***/
/*
 * This register is used for pad COMMB_2's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMB_2_ADDR (0x4002201c)
#define IAXXX_IO_CTRL_COMMB_2_MASK_VAL 0x1e7f681f
#define IAXXX_IO_CTRL_COMMB_2_RMASK_VAL 0x1e7f681f
#define IAXXX_IO_CTRL_COMMB_2_WMASK_VAL 0x1e7f681f
#define IAXXX_IO_CTRL_COMMB_2_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMB_2.
 *   0x6: dmic_do1
 *   0xb: cic_combo_ext_sync_out
 *   0xc: pcm0_dt
 *   0xe: i2c0_data
 *   0x11: spi1_miso
 *   0x12: spi0_cs2_n
 *   0x15: gpio_10
 *   0x16: dmx_fo_10
 *   0x17: hmd_fo_10
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMB_2_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMB_2_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMB_2_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMB_2_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMB_2_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad COMMB_2, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMB_2_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMB_2_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function dmic_pt1_di can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_DI_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the DMIC_PT1_DI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_DMIC_PT1_DI_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_COMMB_2_DMIC_PT1_DI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_DMIC_PT1_DI_AND_SEL_POS 13
#define IAXXX_IO_CTRL_COMMB_2_DMIC_PT1_DI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_DMIC_PT1_DI_AND_SEL_DECL 13

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMB_2_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMB_2_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * COMMB_2, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_COMMB_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_COMMB_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm0_dr can be selected through the following pads:
 *   COMMB_2
 *   COMMB_3
 *   PORTA_DI
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_DR_AND_SEL for pad COMMB_2, a separate
 * receiver enable for the PCM0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_PCM0_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMB_2_PCM0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_PCM0_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMB_2_PCM0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_PCM0_DR_AND_SEL_DECL 17

/*
 * Function pcm_pt0_dr can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_DR_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the PCM_PT0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_PCM_PT0_DR_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_COMMB_2_PCM_PT0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_PCM_PT0_DR_AND_SEL_POS 18
#define IAXXX_IO_CTRL_COMMB_2_PCM_PT0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_PCM_PT0_DR_AND_SEL_DECL 18

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMB_2_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMB_2_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_COMMB_2_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_COMMB_2_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_COMMB_2_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_COMMB_2_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_miso can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MISO_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the SPI1_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_SPI1_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMB_2_SPI1_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_SPI1_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMB_2_SPI1_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_SPI1_MISO_AND_SEL_DECL 22

/*
 * Function afg_msel can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_MSEL_AND_SEL for pad COMMB_2, a separate
 * receiver enable for the AFG_MSEL pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_AFG_MSEL_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_COMMB_2_AFG_MSEL_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_AFG_MSEL_AND_SEL_POS 25
#define IAXXX_IO_CTRL_COMMB_2_AFG_MSEL_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_AFG_MSEL_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_10_AND_SEL for pad COMMB_2, a separate
 * receiver enable for the GPIO_10 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_GPIO_10_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMB_2_GPIO_10_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_2_GPIO_10_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMB_2_GPIO_10_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_GPIO_10_AND_SEL_DECL 26

/*
 * This field is used to control FI_10_AND_SEL for pad COMMB_2, a separate
 * receiver enable for the FI_10 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_FI_10_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMB_2_FI_10_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_2_FI_10_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMB_2_FI_10_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_FI_10_AND_SEL_DECL 27

/*
 * Function io2stmr_2_10_18 can be selected through the following pads:
 *   COMMB_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_2_10_18_AND_SEL for pad COMMB_2, a
 * separate receiver enable for the IO2STMR_2_10_18 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_2_IO2STMR_2_10_18_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMB_2_IO2STMR_2_10_18_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_2_IO2STMR_2_10_18_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMB_2_IO2STMR_2_10_18_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_2_IO2STMR_2_10_18_AND_SEL_DECL 28

/*** IO_CTRL_COMMB_3 (0x40022020) ***/
/*
 * This register is used for pad COMMB_3's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_COMMB_3_ADDR (0x40022020)
#define IAXXX_IO_CTRL_COMMB_3_MASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_COMMB_3_RMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_COMMB_3_WMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_COMMB_3_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad COMMB_3.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm6_bclk
 *   0x6: dmic_do0
 *   0xc: pcm0_dt
 *   0xd: pcm_pt0_dt
 *   0xe: i2c0_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi1_clk
 *   0x12: spi0_cs3_n
 *   0x15: gpio_11
 *   0x16: dmx_fo_11
 *   0x17: hmd_fo_11
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_COMMB_3_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_COMMB_3_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_COMMB_3_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_COMMB_3_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_COMMB_3_MUX_SEL_DECL (4:0)

/*
 * This field is used to control REF6_CLK2CNR_AND_SEL for pad COMMB_3, a
 * separate receiver enable for the REF6_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_REF6_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_COMMB_3_REF6_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_REF6_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_COMMB_3_REF6_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_REF6_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_COMMB_3_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_COMMB_3_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_COMMB_3_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_COMMB_3_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function dmic_pt1_clk_in can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_CLK_IN_AND_SEL for pad COMMB_3, a
 * separate receiver enable for the DMIC_PT1_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_DMIC_PT1_CLK_IN_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_COMMB_3_DMIC_PT1_CLK_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_DMIC_PT1_CLK_IN_AND_SEL_POS 13
#define IAXXX_IO_CTRL_COMMB_3_DMIC_PT1_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_DMIC_PT1_CLK_IN_AND_SEL_DECL 13

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad COMMB_3, a
 * separate receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_COMMB_3_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_COMMB_3_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_COMMB_3_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_COMMB_3_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm0_dr can be selected through the following pads:
 *   COMMB_2
 *   COMMB_3
 *   PORTA_DI
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_DR_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the PCM0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_PCM0_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_COMMB_3_PCM0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_PCM0_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_COMMB_3_PCM0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_PCM0_DR_AND_SEL_DECL 17

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_COMMB_3_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_COMMB_3_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function spi1_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CLK_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the SPI1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_SPI1_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_COMMB_3_SPI1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_SPI1_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_COMMB_3_SPI1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_SPI1_CLK_AND_SEL_DECL 22

/*
 * Function afg_spi_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_SPI_CLK_AND_SEL for pad COMMB_3, a
 * separate receiver enable for the AFG_SPI_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_AFG_SPI_CLK_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_COMMB_3_AFG_SPI_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_AFG_SPI_CLK_AND_SEL_POS 25
#define IAXXX_IO_CTRL_COMMB_3_AFG_SPI_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_AFG_SPI_CLK_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_11_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the GPIO_11 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_GPIO_11_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_COMMB_3_GPIO_11_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_3_GPIO_11_AND_SEL_POS 26
#define IAXXX_IO_CTRL_COMMB_3_GPIO_11_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_GPIO_11_AND_SEL_DECL 26

/*
 * This field is used to control FI_11_AND_SEL for pad COMMB_3, a separate
 * receiver enable for the FI_11 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_FI_11_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_COMMB_3_FI_11_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_COMMB_3_FI_11_AND_SEL_POS 27
#define IAXXX_IO_CTRL_COMMB_3_FI_11_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_FI_11_AND_SEL_DECL 27

/*
 * Function io2stmr_3_11_19 can be selected through the following pads:
 *   COMMB_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_3_11_19_AND_SEL for pad COMMB_3, a
 * separate receiver enable for the IO2STMR_3_11_19 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_COMMB_3_IO2STMR_3_11_19_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_COMMB_3_IO2STMR_3_11_19_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_COMMB_3_IO2STMR_3_11_19_AND_SEL_POS 28
#define IAXXX_IO_CTRL_COMMB_3_IO2STMR_3_11_19_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_COMMB_3_IO2STMR_3_11_19_AND_SEL_DECL 28

/*** IO_CTRL_GPIO_0 (0x40022024) ***/
/*
 * This register is used for pad GPIO_0's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_GPIO_0_ADDR (0x40022024)
#define IAXXX_IO_CTRL_GPIO_0_MASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_GPIO_0_RMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_GPIO_0_WMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_GPIO_0_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad GPIO_0.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm4_bclk
 *   0x6: dmic_do0
 *   0x8: dmic_pt1_clk_out
 *   0xd: pcm_pt1_bclk
 *   0xe: i2c1_clk
 *   0x11: spi0_cs0_n
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_0
 *   0x16: dmx_fo_0
 *   0x17: hmd_fo_0
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_GPIO_0_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_GPIO_0_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_GPIO_0_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_GPIO_0_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_GPIO_0_MUX_SEL_DECL (4:0)

/*
 * Function ref1_clk2cnr can be selected through the following pads:
 *   GPIO_0
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF1_CLK2CNR_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the REF1_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_REF1_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_GPIO_0_REF1_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_REF1_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_GPIO_0_REF1_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_REF1_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_GPIO_0_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_GPIO_0_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_GPIO_0_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_GPIO_0_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_GPIO_0_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_GPIO_0_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_GPIO_0_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_GPIO_0_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_CDC0_CLK_AND_SEL_DECL 15

/*
 * Function pcm1_bclk can be selected through the following pads:
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_BCLK_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the PCM1_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_PCM1_BCLK_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_GPIO_0_PCM1_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_PCM1_BCLK_AND_SEL_POS 17
#define IAXXX_IO_CTRL_GPIO_0_PCM1_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_PCM1_BCLK_AND_SEL_DECL 17

/*
 * Function pcm_pt1_bclk can be selected through the following pads:
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_BCLK_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the PCM_PT1_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_PCM_PT1_BCLK_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_GPIO_0_PCM_PT1_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_PCM_PT1_BCLK_AND_SEL_POS 18
#define IAXXX_IO_CTRL_GPIO_0_PCM_PT1_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_PCM_PT1_BCLK_AND_SEL_DECL 18

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_GPIO_0_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_GPIO_0_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_GPIO_0_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_GPIO_0_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_GPIO_0_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_GPIO_0_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_cs0_n can be selected through the following pads:
 *   COMMA_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CS0_N_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the SPI0_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_SPI0_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_GPIO_0_SPI0_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_SPI0_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_GPIO_0_SPI0_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_SPI0_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_0_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the GPIO_0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_GPIO_0_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_GPIO_0_GPIO_0_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_GPIO_0_GPIO_0_AND_SEL_POS 26
#define IAXXX_IO_CTRL_GPIO_0_GPIO_0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_GPIO_0_AND_SEL_DECL 26

/*
 * This field is used to control FI_0_AND_SEL for pad GPIO_0, a separate
 * receiver enable for the FI_0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_FI_0_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_GPIO_0_FI_0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_FI_0_AND_SEL_POS 27
#define IAXXX_IO_CTRL_GPIO_0_FI_0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_FI_0_AND_SEL_DECL 27

/*
 * Function io2stmr_0_8_16 can be selected through the following pads:
 *   COMMB_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_0_8_16_AND_SEL for pad GPIO_0, a
 * separate receiver enable for the IO2STMR_0_8_16 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_0_IO2STMR_0_8_16_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_GPIO_0_IO2STMR_0_8_16_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_0_IO2STMR_0_8_16_AND_SEL_POS 28
#define IAXXX_IO_CTRL_GPIO_0_IO2STMR_0_8_16_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_0_IO2STMR_0_8_16_AND_SEL_DECL 28

/*** IO_CTRL_GPIO_1 (0x40022028) ***/
/*
 * This register is used for pad GPIO_1's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_GPIO_1_ADDR (0x40022028)
#define IAXXX_IO_CTRL_GPIO_1_MASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_GPIO_1_RMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_GPIO_1_WMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_GPIO_1_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad GPIO_1.
 *   0x5: i2s_pcm4_fs
 *   0x6: dmic_do1
 *   0x8: dmic_pt1_do
 *   0xb: cic_combo_ext_sync_out
 *   0xd: pcm_pt1_fs
 *   0xe: i2c1_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi0_mosi
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_1
 *   0x16: dmx_fo_1
 *   0x17: hmd_fo_1
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_GPIO_1_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_GPIO_1_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_GPIO_1_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_GPIO_1_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_GPIO_1_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_GPIO_1_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_GPIO_1_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad GPIO_1, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_GPIO_1_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_GPIO_1_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * GPIO_1, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_GPIO_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_GPIO_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm1_fs can be selected through the following pads:
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_FS_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the PCM1_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_PCM1_FS_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_GPIO_1_PCM1_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_PCM1_FS_AND_SEL_POS 17
#define IAXXX_IO_CTRL_GPIO_1_PCM1_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_PCM1_FS_AND_SEL_DECL 17

/*
 * Function pcm_pt1_fs can be selected through the following pads:
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_FS_AND_SEL for pad GPIO_1, a
 * separate receiver enable for the PCM_PT1_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_PCM_PT1_FS_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_GPIO_1_PCM_PT1_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_PCM_PT1_FS_AND_SEL_POS 18
#define IAXXX_IO_CTRL_GPIO_1_PCM_PT1_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_PCM_PT1_FS_AND_SEL_DECL 18

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_GPIO_1_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_GPIO_1_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function spi0_mosi can be selected through the following pads:
 *   COMMA_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MOSI_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the SPI0_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_SPI0_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_GPIO_1_SPI0_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_SPI0_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_GPIO_1_SPI0_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_SPI0_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_1_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the GPIO_1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_GPIO_1_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_GPIO_1_GPIO_1_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_GPIO_1_GPIO_1_AND_SEL_POS 26
#define IAXXX_IO_CTRL_GPIO_1_GPIO_1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_GPIO_1_AND_SEL_DECL 26

/*
 * This field is used to control FI_1_AND_SEL for pad GPIO_1, a separate
 * receiver enable for the FI_1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_FI_1_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_GPIO_1_FI_1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_FI_1_AND_SEL_POS 27
#define IAXXX_IO_CTRL_GPIO_1_FI_1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_FI_1_AND_SEL_DECL 27

/*
 * Function io2stmr_1_9_17 can be selected through the following pads:
 *   COMMB_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_1_9_17_AND_SEL for pad GPIO_1, a
 * separate receiver enable for the IO2STMR_1_9_17 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_GPIO_1_IO2STMR_1_9_17_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_GPIO_1_IO2STMR_1_9_17_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_GPIO_1_IO2STMR_1_9_17_AND_SEL_POS 28
#define IAXXX_IO_CTRL_GPIO_1_IO2STMR_1_9_17_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_GPIO_1_IO2STMR_1_9_17_AND_SEL_DECL 28

/*** IO_CTRL_IRQ (0x4002202c) ***/
/*
 * This register is used for pad IRQ's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_IRQ_ADDR (0x4002202c)
#define IAXXX_IO_CTRL_IRQ_MASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_IRQ_RMASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_IRQ_WMASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_IRQ_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad IRQ.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm0_bclk
 *   0x6: dmic_do1
 *   0xc: pcm1_dt
 *   0xd: pcm_pt1_dt
 *   0xe: i2c0_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi0_clk
 *   0x12: spi0_cs3_n
 *   0x13: spi1_cs3_n
 *   0x15: gpio_3
 *   0x16: dmx_fo_3
 *   0x17: hmd_fo_3
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_IRQ_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_IRQ_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_IRQ_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_IRQ_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_IRQ_MUX_SEL_DECL (4:0)

/*
 * Function ref2_clk2cnr can be selected through the following pads:
 *   IRQ
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF2_CLK2CNR_AND_SEL for pad IRQ, a separate
 * receiver enable for the REF2_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_REF2_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_IRQ_REF2_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_REF2_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_IRQ_REF2_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_REF2_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad IRQ, a separate
 * receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_IRQ_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_IRQ_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad IRQ, a separate
 * receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_IRQ_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_IRQ_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function dmic_pt0_clk_in can be selected through the following pads:
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT0_CLK_IN_AND_SEL for pad IRQ, a
 * separate receiver enable for the DMIC_PT0_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_DMIC_PT0_CLK_IN_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_IRQ_DMIC_PT0_CLK_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_DMIC_PT0_CLK_IN_AND_SEL_POS 13
#define IAXXX_IO_CTRL_IRQ_DMIC_PT0_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_DMIC_PT0_CLK_IN_AND_SEL_DECL 13

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad IRQ, a separate
 * receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_IRQ_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_IRQ_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad IRQ, a separate
 * receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_IRQ_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_IRQ_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm1_dr can be selected through the following pads:
 *   WAKE
 *   IRQ
 *   PORTB_DI
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_DR_AND_SEL for pad IRQ, a separate
 * receiver enable for the PCM1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_PCM1_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_IRQ_PCM1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_PCM1_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_IRQ_PCM1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_PCM1_DR_AND_SEL_DECL 17

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad IRQ, a separate
 * receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_IRQ_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_IRQ_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function spi0_clk can be selected through the following pads:
 *   COMMA_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CLK_AND_SEL for pad IRQ, a separate
 * receiver enable for the SPI0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_SPI0_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_IRQ_SPI0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_SPI0_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_IRQ_SPI0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_SPI0_CLK_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_3_AND_SEL for pad IRQ, a separate
 * receiver enable for the GPIO_3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_GPIO_3_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_IRQ_GPIO_3_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_IRQ_GPIO_3_AND_SEL_POS 26
#define IAXXX_IO_CTRL_IRQ_GPIO_3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_GPIO_3_AND_SEL_DECL 26

/*
 * This field is used to control FI_3_AND_SEL for pad IRQ, a separate
 * receiver enable for the FI_3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_FI_3_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_IRQ_FI_3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_FI_3_AND_SEL_POS 27
#define IAXXX_IO_CTRL_IRQ_FI_3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_FI_3_AND_SEL_DECL 27

/*
 * Function io2stmr_3_11_19 can be selected through the following pads:
 *   COMMB_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_3_11_19_AND_SEL for pad IRQ, a
 * separate receiver enable for the IO2STMR_3_11_19 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_IRQ_IO2STMR_3_11_19_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_IRQ_IO2STMR_3_11_19_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_IRQ_IO2STMR_3_11_19_AND_SEL_POS 28
#define IAXXX_IO_CTRL_IRQ_IO2STMR_3_11_19_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_IRQ_IO2STMR_3_11_19_AND_SEL_DECL 28

/*** IO_CTRL_JTAG_DBG_TCK (0x40022030) ***/
/*
 * This register is used for pad JTAG_DBG_TCK's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_JTAG_DBG_TCK_ADDR (0x40022030)
#define IAXXX_IO_CTRL_JTAG_DBG_TCK_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TCK_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TCK_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TCK_RESET_VAL 0x00000000

/*** IO_CTRL_JTAG_DBG_TDI (0x40022034) ***/
/*
 * This register is used for pad JTAG_DBG_TDI's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_JTAG_DBG_TDI_ADDR (0x40022034)
#define IAXXX_IO_CTRL_JTAG_DBG_TDI_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDI_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDI_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDI_RESET_VAL 0x00000000

/*** IO_CTRL_JTAG_DBG_TDO (0x40022038) ***/
/*
 * This register is used for pad JTAG_DBG_TDO's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_JTAG_DBG_TDO_ADDR (0x40022038)
#define IAXXX_IO_CTRL_JTAG_DBG_TDO_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDO_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDO_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TDO_RESET_VAL 0x00000000

/*** IO_CTRL_JTAG_DBG_TMS (0x4002203c) ***/
/*
 * This register is used for pad JTAG_DBG_TMS's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_JTAG_DBG_TMS_ADDR (0x4002203c)
#define IAXXX_IO_CTRL_JTAG_DBG_TMS_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TMS_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TMS_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_JTAG_DBG_TMS_RESET_VAL 0x00000000

/*** IO_CTRL_PORTA_CLK (0x40022040) ***/
/*
 * This register is used for pad PORTA_CLK's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_ADDR (0x40022040)
#define IAXXX_IO_CTRL_PORTA_CLK_MASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTA_CLK_RMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTA_CLK_WMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTA_CLK_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTA_CLK.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm0_bclk
 *   0x8: dmic_pt0_clk_out
 *   0xd: pcm_pt0_bclk
 *   0xe: i2c0_clk
 *   0x11: spi1_cs0_n
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_12
 *   0x16: dmx_fo_0
 *   0x17: hmd_fo_0
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTA_CLK_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTA_CLK_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTA_CLK_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTA_CLK_MUX_SEL_DECL (4:0)

/*
 * This field is used to control REF0_CLK2CNR_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the REF0_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_REF0_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTA_CLK_REF0_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_REF0_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTA_CLK_REF0_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_REF0_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTA_CLK_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTA_CLK_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTA_CLK_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTA_CLK_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTA_CLK_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTA_CLK_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTA_CLK_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTA_CLK_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_CDC0_CLK_AND_SEL_DECL 15

/*
 * Function pcm0_bclk can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_BCLK_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the PCM0_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_PCM0_BCLK_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTA_CLK_PCM0_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_PCM0_BCLK_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTA_CLK_PCM0_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_PCM0_BCLK_AND_SEL_DECL 17

/*
 * Function pcm_pt0_bclk can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_BCLK_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the PCM_PT0_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_PCM_PT0_BCLK_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTA_CLK_PCM_PT0_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_PCM_PT0_BCLK_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTA_CLK_PCM_PT0_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_PCM_PT0_BCLK_AND_SEL_DECL 18

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTA_CLK_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTA_CLK_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTA_CLK_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTA_CLK_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTA_CLK_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTA_CLK_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_cs0_n can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CS0_N_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the SPI1_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_SPI1_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTA_CLK_SPI1_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_SPI1_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTA_CLK_SPI1_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_SPI1_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_12_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the GPIO_12 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_GPIO_12_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTA_CLK_GPIO_12_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_CLK_GPIO_12_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTA_CLK_GPIO_12_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_GPIO_12_AND_SEL_DECL 26

/*
 * This field is used to control FI_12_AND_SEL for pad PORTA_CLK, a separate
 * receiver enable for the FI_12 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_FI_12_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTA_CLK_FI_12_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_CLK_FI_12_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTA_CLK_FI_12_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_FI_12_AND_SEL_DECL 27

/*
 * Function io2stmr_4_12_20 can be selected through the following pads:
 *   COMMA_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_4_12_20_AND_SEL for pad PORTA_CLK, a
 * separate receiver enable for the IO2STMR_4_12_20 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_CLK_IO2STMR_4_12_20_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTA_CLK_IO2STMR_4_12_20_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_CLK_IO2STMR_4_12_20_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTA_CLK_IO2STMR_4_12_20_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_CLK_IO2STMR_4_12_20_AND_SEL_DECL 28

/*** IO_CTRL_PORTA_DI (0x40022044) ***/
/*
 * This register is used for pad PORTA_DI's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTA_DI_ADDR (0x40022044)
#define IAXXX_IO_CTRL_PORTA_DI_MASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTA_DI_RMASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTA_DI_WMASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTA_DI_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTA_DI.
 *   0x6: dmic_do1
 *   0xc: pcm0_dt
 *   0xe: i2c1_data
 *   0x11: spi1_miso
 *   0x12: spi0_cs2_n
 *   0x13: spi1_cs2_n
 *   0x15: gpio_14
 *   0x16: dmx_fo_2
 *   0x17: hmd_fo_2
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTA_DI_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTA_DI_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTA_DI_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTA_DI_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTA_DI_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function dmic_pt1_di can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_DI_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the DMIC_PT1_DI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_PT1_DI_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_PT1_DI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_PT1_DI_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_PT1_DI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_DMIC_PT1_DI_AND_SEL_DECL 13

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTA_DI_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTA_DI_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function pcm0_dr can be selected through the following pads:
 *   COMMB_2
 *   COMMB_3
 *   PORTA_DI
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_DR_AND_SEL for pad PORTA_DI, a separate
 * receiver enable for the PCM0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_PCM0_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTA_DI_PCM0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_PCM0_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTA_DI_PCM0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_PCM0_DR_AND_SEL_DECL 17

/*
 * Function pcm_pt0_dr can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_DR_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the PCM_PT0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_PCM_PT0_DR_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTA_DI_PCM_PT0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_PCM_PT0_DR_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTA_DI_PCM_PT0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_PCM_PT0_DR_AND_SEL_DECL 18

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTA_DI_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTA_DI_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTA_DI_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTA_DI_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTA_DI_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTA_DI_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_miso can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MISO_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the SPI1_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_SPI1_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTA_DI_SPI1_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_SPI1_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTA_DI_SPI1_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_SPI1_MISO_AND_SEL_DECL 22

/*
 * Function afg_msel can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_MSEL_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the AFG_MSEL pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_AFG_MSEL_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_PORTA_DI_AFG_MSEL_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_AFG_MSEL_AND_SEL_POS 25
#define IAXXX_IO_CTRL_PORTA_DI_AFG_MSEL_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_AFG_MSEL_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_14_AND_SEL for pad PORTA_DI, a separate
 * receiver enable for the GPIO_14 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_GPIO_14_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTA_DI_GPIO_14_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_DI_GPIO_14_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTA_DI_GPIO_14_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_GPIO_14_AND_SEL_DECL 26

/*
 * This field is used to control FI_14_AND_SEL for pad PORTA_DI, a separate
 * receiver enable for the FI_14 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_FI_14_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTA_DI_FI_14_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DI_FI_14_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTA_DI_FI_14_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_FI_14_AND_SEL_DECL 27

/*
 * Function io2stmr_6_14_22 can be selected through the following pads:
 *   COMMA_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_6_14_22_AND_SEL for pad PORTA_DI, a
 * separate receiver enable for the IO2STMR_6_14_22 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DI_IO2STMR_6_14_22_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTA_DI_IO2STMR_6_14_22_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_DI_IO2STMR_6_14_22_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTA_DI_IO2STMR_6_14_22_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DI_IO2STMR_6_14_22_AND_SEL_DECL 28

/*** IO_CTRL_PORTA_DO (0x40022048) ***/
/*
 * This register is used for pad PORTA_DO's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTA_DO_ADDR (0x40022048)
#define IAXXX_IO_CTRL_PORTA_DO_MASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTA_DO_RMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTA_DO_WMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTA_DO_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTA_DO.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm3_bclk
 *   0x6: dmic_do0
 *   0xc: pcm0_dt
 *   0xd: pcm_pt0_dt
 *   0xe: i2c1_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi1_clk
 *   0x12: spi0_cs3_n
 *   0x13: spi1_cs3_n
 *   0x15: gpio_15
 *   0x16: dmx_fo_3
 *   0x17: hmd_fo_3
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTA_DO_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTA_DO_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTA_DO_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTA_DO_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTA_DO_MUX_SEL_DECL (4:0)

/*
 * Function ref1_clk2cnr can be selected through the following pads:
 *   GPIO_0
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF1_CLK2CNR_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the REF1_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_REF1_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTA_DO_REF1_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_REF1_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTA_DO_REF1_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_REF1_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTA_DO_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTA_DO_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function dmic_pt1_clk_in can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_CLK_IN_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the DMIC_PT1_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_PT1_CLK_IN_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_PT1_CLK_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_PT1_CLK_IN_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_PT1_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_DMIC_PT1_CLK_IN_AND_SEL_DECL 13

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTA_DO_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTA_DO_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTA_DO_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTA_DO_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm0_dr can be selected through the following pads:
 *   COMMB_2
 *   COMMB_3
 *   PORTA_DI
 *   PORTA_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_DR_AND_SEL for pad PORTA_DO, a separate
 * receiver enable for the PCM0_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_PCM0_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTA_DO_PCM0_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_PCM0_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTA_DO_PCM0_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_PCM0_DR_AND_SEL_DECL 17

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTA_DO_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTA_DO_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function spi1_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CLK_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the SPI1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_SPI1_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTA_DO_SPI1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_SPI1_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTA_DO_SPI1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_SPI1_CLK_AND_SEL_DECL 22

/*
 * Function afg_spi_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_SPI_CLK_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the AFG_SPI_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_AFG_SPI_CLK_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_PORTA_DO_AFG_SPI_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_AFG_SPI_CLK_AND_SEL_POS 25
#define IAXXX_IO_CTRL_PORTA_DO_AFG_SPI_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_AFG_SPI_CLK_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_15_AND_SEL for pad PORTA_DO, a separate
 * receiver enable for the GPIO_15 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_GPIO_15_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTA_DO_GPIO_15_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_DO_GPIO_15_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTA_DO_GPIO_15_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_GPIO_15_AND_SEL_DECL 26

/*
 * This field is used to control FI_15_AND_SEL for pad PORTA_DO, a separate
 * receiver enable for the FI_15 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_FI_15_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTA_DO_FI_15_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_DO_FI_15_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTA_DO_FI_15_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_FI_15_AND_SEL_DECL 27

/*
 * Function io2stmr_7_15_23 can be selected through the following pads:
 *   COMMA_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_7_15_23_AND_SEL for pad PORTA_DO, a
 * separate receiver enable for the IO2STMR_7_15_23 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_DO_IO2STMR_7_15_23_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTA_DO_IO2STMR_7_15_23_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_DO_IO2STMR_7_15_23_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTA_DO_IO2STMR_7_15_23_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_DO_IO2STMR_7_15_23_AND_SEL_DECL 28

/*** IO_CTRL_PORTA_FS (0x4002204c) ***/
/*
 * This register is used for pad PORTA_FS's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTA_FS_ADDR (0x4002204c)
#define IAXXX_IO_CTRL_PORTA_FS_MASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTA_FS_RMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTA_FS_WMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTA_FS_RESET_VAL 0x1400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTA_FS.
 *   0x5: i2s_pcm0_fs
 *   0x6: dmic_do0
 *   0x8: dmic_pt0_do
 *   0xb: cic_combo_ext_sync_out
 *   0xd: pcm_pt0_fs
 *   0xe: i2c0_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi1_mosi
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x14: afg_sda
 *   0x15: gpio_13
 *   0x16: dmx_fo_1
 *   0x17: hmd_fo_1
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTA_FS_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTA_FS_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTA_FS_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTA_FS_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTA_FS_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTA_FS_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTA_FS_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTA_FS_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTA_FS_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * PORTA_FS, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_PORTA_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_PORTA_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm0_fs can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM0_FS_AND_SEL for pad PORTA_FS, a separate
 * receiver enable for the PCM0_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_PCM0_FS_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTA_FS_PCM0_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_PCM0_FS_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTA_FS_PCM0_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_PCM0_FS_AND_SEL_DECL 17

/*
 * Function pcm_pt0_fs can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT0_FS_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the PCM_PT0_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_PCM_PT0_FS_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTA_FS_PCM_PT0_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_PCM_PT0_FS_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTA_FS_PCM_PT0_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_PCM_PT0_FS_AND_SEL_DECL 18

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTA_FS_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTA_FS_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function spi1_mosi can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MOSI_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the SPI1_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_SPI1_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTA_FS_SPI1_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_SPI1_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTA_FS_SPI1_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_SPI1_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_13_AND_SEL for pad PORTA_FS, a separate
 * receiver enable for the GPIO_13 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_GPIO_13_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTA_FS_GPIO_13_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_FS_GPIO_13_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTA_FS_GPIO_13_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_GPIO_13_AND_SEL_DECL 26

/*
 * This field is used to control FI_13_AND_SEL for pad PORTA_FS, a separate
 * receiver enable for the FI_13 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_FI_13_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTA_FS_FI_13_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTA_FS_FI_13_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTA_FS_FI_13_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_FI_13_AND_SEL_DECL 27

/*
 * Function io2stmr_5_13_21 can be selected through the following pads:
 *   COMMA_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_5_13_21_AND_SEL for pad PORTA_FS, a
 * separate receiver enable for the IO2STMR_5_13_21 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTA_FS_IO2STMR_5_13_21_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTA_FS_IO2STMR_5_13_21_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTA_FS_IO2STMR_5_13_21_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTA_FS_IO2STMR_5_13_21_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTA_FS_IO2STMR_5_13_21_AND_SEL_DECL 28

/*** IO_CTRL_PORTB_CLK (0x40022050) ***/
/*
 * This register is used for pad PORTB_CLK's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_ADDR (0x40022050)
#define IAXXX_IO_CTRL_PORTB_CLK_MASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTB_CLK_RMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTB_CLK_WMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTB_CLK_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTB_CLK.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm1_bclk
 *   0x8: dmic_pt1_clk_out
 *   0xd: pcm_pt1_bclk
 *   0xe: i2c1_clk
 *   0x11: spi0_cs0_n
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_16
 *   0x16: dmx_fo_4
 *   0x17: hmd_fo_4
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTB_CLK_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTB_CLK_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTB_CLK_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTB_CLK_MUX_SEL_DECL (4:0)

/*
 * Function ref2_clk2cnr can be selected through the following pads:
 *   IRQ
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF2_CLK2CNR_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the REF2_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_REF2_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTB_CLK_REF2_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_REF2_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTB_CLK_REF2_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_REF2_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTB_CLK_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTB_CLK_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTB_CLK_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTB_CLK_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTB_CLK_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTB_CLK_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTB_CLK_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTB_CLK_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_CDC0_CLK_AND_SEL_DECL 15

/*
 * Function pcm1_bclk can be selected through the following pads:
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_BCLK_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the PCM1_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_PCM1_BCLK_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTB_CLK_PCM1_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_PCM1_BCLK_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTB_CLK_PCM1_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_PCM1_BCLK_AND_SEL_DECL 17

/*
 * Function pcm_pt1_bclk can be selected through the following pads:
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_BCLK_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the PCM_PT1_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_PCM_PT1_BCLK_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTB_CLK_PCM_PT1_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_PCM_PT1_BCLK_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTB_CLK_PCM_PT1_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_PCM_PT1_BCLK_AND_SEL_DECL 18

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTB_CLK_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTB_CLK_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTB_CLK_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTB_CLK_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTB_CLK_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTB_CLK_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_cs0_n can be selected through the following pads:
 *   COMMA_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CS0_N_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the SPI0_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_SPI0_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTB_CLK_SPI0_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_SPI0_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTB_CLK_SPI0_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_SPI0_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_16_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the GPIO_16 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_GPIO_16_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTB_CLK_GPIO_16_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTB_CLK_GPIO_16_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTB_CLK_GPIO_16_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_GPIO_16_AND_SEL_DECL 26

/*
 * This field is used to control FI_16_AND_SEL for pad PORTB_CLK, a separate
 * receiver enable for the FI_16 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_FI_16_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTB_CLK_FI_16_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_FI_16_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTB_CLK_FI_16_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_FI_16_AND_SEL_DECL 27

/*
 * Function io2stmr_0_8_16 can be selected through the following pads:
 *   COMMB_0
 *   GPIO_0
 *   PORTB_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_0_8_16_AND_SEL for pad PORTB_CLK, a
 * separate receiver enable for the IO2STMR_0_8_16 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_CLK_IO2STMR_0_8_16_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTB_CLK_IO2STMR_0_8_16_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_CLK_IO2STMR_0_8_16_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTB_CLK_IO2STMR_0_8_16_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_CLK_IO2STMR_0_8_16_AND_SEL_DECL 28

/*** IO_CTRL_PORTB_DI (0x40022054) ***/
/*
 * This register is used for pad PORTB_DI's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTB_DI_ADDR (0x40022054)
#define IAXXX_IO_CTRL_PORTB_DI_MASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_PORTB_DI_RMASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_PORTB_DI_WMASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_PORTB_DI_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTB_DI.
 *   0x6: dmic_do0
 *   0xc: pcm1_dt
 *   0xe: i2c0_data
 *   0x11: spi0_miso
 *   0x12: spi0_cs2_n
 *   0x13: spi1_cs2_n
 *   0x15: gpio_18
 *   0x16: dmx_fo_6
 *   0x17: hmd_fo_6
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTB_DI_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTB_DI_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTB_DI_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTB_DI_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTB_DI_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function dmic_pt0_di can be selected through the following pads:
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT0_DI_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the DMIC_PT0_DI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_PT0_DI_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_PT0_DI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_PT0_DI_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_PT0_DI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_DMIC_PT0_DI_AND_SEL_DECL 13

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTB_DI_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTB_DI_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function pcm1_dr can be selected through the following pads:
 *   WAKE
 *   IRQ
 *   PORTB_DI
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_DR_AND_SEL for pad PORTB_DI, a separate
 * receiver enable for the PCM1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_PCM1_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTB_DI_PCM1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_PCM1_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTB_DI_PCM1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_PCM1_DR_AND_SEL_DECL 17

/*
 * Function pcm_pt1_dr can be selected through the following pads:
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_DR_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the PCM_PT1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_PCM_PT1_DR_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTB_DI_PCM_PT1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_PCM_PT1_DR_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTB_DI_PCM_PT1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_PCM_PT1_DR_AND_SEL_DECL 18

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTB_DI_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTB_DI_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTB_DI_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTB_DI_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTB_DI_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTB_DI_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_miso can be selected through the following pads:
 *   COMMA_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MISO_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the SPI0_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_SPI0_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTB_DI_SPI0_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_SPI0_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTB_DI_SPI0_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_SPI0_MISO_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_18_AND_SEL for pad PORTB_DI, a separate
 * receiver enable for the GPIO_18 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_GPIO_18_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTB_DI_GPIO_18_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTB_DI_GPIO_18_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTB_DI_GPIO_18_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_GPIO_18_AND_SEL_DECL 26

/*
 * This field is used to control FI_18_AND_SEL for pad PORTB_DI, a separate
 * receiver enable for the FI_18 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_FI_18_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTB_DI_FI_18_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_FI_18_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTB_DI_FI_18_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_FI_18_AND_SEL_DECL 27

/*
 * Function io2stmr_2_10_18 can be selected through the following pads:
 *   COMMB_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_2_10_18_AND_SEL for pad PORTB_DI, a
 * separate receiver enable for the IO2STMR_2_10_18 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DI_IO2STMR_2_10_18_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTB_DI_IO2STMR_2_10_18_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DI_IO2STMR_2_10_18_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTB_DI_IO2STMR_2_10_18_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DI_IO2STMR_2_10_18_AND_SEL_DECL 28

/*** IO_CTRL_PORTB_DO (0x40022058) ***/
/*
 * This register is used for pad PORTB_DO's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTB_DO_ADDR (0x40022058)
#define IAXXX_IO_CTRL_PORTB_DO_MASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_PORTB_DO_RMASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_PORTB_DO_WMASK_VAL 0x1c4afa1f
#define IAXXX_IO_CTRL_PORTB_DO_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTB_DO.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm4_bclk
 *   0x6: dmic_do1
 *   0xc: pcm1_dt
 *   0xd: pcm_pt1_dt
 *   0xe: i2c0_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi0_clk
 *   0x12: spi0_cs3_n
 *   0x13: spi1_cs3_n
 *   0x15: gpio_19
 *   0x16: dmx_fo_7
 *   0x17: hmd_fo_7
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTB_DO_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTB_DO_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTB_DO_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTB_DO_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTB_DO_MUX_SEL_DECL (4:0)

/*
 * Function ref3_clk2cnr can be selected through the following pads:
 *   COMMA_0
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF3_CLK2CNR_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the REF3_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_REF3_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTB_DO_REF3_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_REF3_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTB_DO_REF3_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_REF3_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTB_DO_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTB_DO_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function dmic_pt0_clk_in can be selected through the following pads:
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT0_CLK_IN_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the DMIC_PT0_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_PT0_CLK_IN_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_PT0_CLK_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_PT0_CLK_IN_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_PT0_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_DMIC_PT0_CLK_IN_AND_SEL_DECL 13

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTB_DO_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTB_DO_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTB_DO_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTB_DO_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm1_dr can be selected through the following pads:
 *   WAKE
 *   IRQ
 *   PORTB_DI
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_DR_AND_SEL for pad PORTB_DO, a separate
 * receiver enable for the PCM1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_PCM1_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTB_DO_PCM1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_PCM1_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTB_DO_PCM1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_PCM1_DR_AND_SEL_DECL 17

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTB_DO_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTB_DO_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function spi0_clk can be selected through the following pads:
 *   COMMA_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_CLK_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the SPI0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_SPI0_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTB_DO_SPI0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_SPI0_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTB_DO_SPI0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_SPI0_CLK_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_19_AND_SEL for pad PORTB_DO, a separate
 * receiver enable for the GPIO_19 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_GPIO_19_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTB_DO_GPIO_19_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTB_DO_GPIO_19_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTB_DO_GPIO_19_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_GPIO_19_AND_SEL_DECL 26

/*
 * This field is used to control FI_19_AND_SEL for pad PORTB_DO, a separate
 * receiver enable for the FI_19 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_FI_19_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTB_DO_FI_19_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_FI_19_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTB_DO_FI_19_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_FI_19_AND_SEL_DECL 27

/*
 * Function io2stmr_3_11_19 can be selected through the following pads:
 *   COMMB_3
 *   IRQ
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_3_11_19_AND_SEL for pad PORTB_DO, a
 * separate receiver enable for the IO2STMR_3_11_19 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_DO_IO2STMR_3_11_19_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTB_DO_IO2STMR_3_11_19_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_DO_IO2STMR_3_11_19_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTB_DO_IO2STMR_3_11_19_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_DO_IO2STMR_3_11_19_AND_SEL_DECL 28

/*** IO_CTRL_PORTB_FS (0x4002205c) ***/
/*
 * This register is used for pad PORTB_FS's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTB_FS_ADDR (0x4002205c)
#define IAXXX_IO_CTRL_PORTB_FS_MASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTB_FS_RMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTB_FS_WMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTB_FS_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTB_FS.
 *   0x5: i2s_pcm1_fs
 *   0x6: dmic_do1
 *   0x8: dmic_pt1_do
 *   0xb: cic_combo_ext_sync_out
 *   0xd: pcm_pt1_fs
 *   0xe: i2c1_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi0_mosi
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_17
 *   0x16: dmx_fo_5
 *   0x17: hmd_fo_5
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTB_FS_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTB_FS_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTB_FS_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTB_FS_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTB_FS_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTB_FS_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTB_FS_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTB_FS_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTB_FS_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * PORTB_FS, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_PORTB_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_PORTB_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * Function pcm1_fs can be selected through the following pads:
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_FS_AND_SEL for pad PORTB_FS, a separate
 * receiver enable for the PCM1_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_PCM1_FS_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTB_FS_PCM1_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_PCM1_FS_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTB_FS_PCM1_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_PCM1_FS_AND_SEL_DECL 17

/*
 * Function pcm_pt1_fs can be selected through the following pads:
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_FS_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the PCM_PT1_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_PCM_PT1_FS_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTB_FS_PCM_PT1_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_PCM_PT1_FS_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTB_FS_PCM_PT1_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_PCM_PT1_FS_AND_SEL_DECL 18

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTB_FS_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTB_FS_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function spi0_mosi can be selected through the following pads:
 *   COMMA_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MOSI_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the SPI0_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_SPI0_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTB_FS_SPI0_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_SPI0_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTB_FS_SPI0_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_SPI0_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_17_AND_SEL for pad PORTB_FS, a separate
 * receiver enable for the GPIO_17 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_GPIO_17_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTB_FS_GPIO_17_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTB_FS_GPIO_17_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTB_FS_GPIO_17_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_GPIO_17_AND_SEL_DECL 26

/*
 * This field is used to control FI_17_AND_SEL for pad PORTB_FS, a separate
 * receiver enable for the FI_17 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_FI_17_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTB_FS_FI_17_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_FI_17_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTB_FS_FI_17_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_FI_17_AND_SEL_DECL 27

/*
 * Function io2stmr_1_9_17 can be selected through the following pads:
 *   COMMB_1
 *   GPIO_1
 *   PORTB_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_1_9_17_AND_SEL for pad PORTB_FS, a
 * separate receiver enable for the IO2STMR_1_9_17 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTB_FS_IO2STMR_1_9_17_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTB_FS_IO2STMR_1_9_17_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTB_FS_IO2STMR_1_9_17_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTB_FS_IO2STMR_1_9_17_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTB_FS_IO2STMR_1_9_17_AND_SEL_DECL 28

/*** IO_CTRL_PORTC_CLK (0x40022060) ***/
/*
 * This register is used for pad PORTC_CLK's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_ADDR (0x40022060)
#define IAXXX_IO_CTRL_PORTC_CLK_MASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTC_CLK_RMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTC_CLK_WMASK_VAL 0x1c7eda1f
#define IAXXX_IO_CTRL_PORTC_CLK_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTC_CLK.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm2_bclk
 *   0x8: dmic_pt0_clk_out
 *   0xd: pcm_pt2_bclk
 *   0xe: i2c0_clk
 *   0x11: spi1_cs0_n
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x15: gpio_20
 *   0x16: dmx_fo_8
 *   0x17: hmd_fo_8
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTC_CLK_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTC_CLK_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTC_CLK_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTC_CLK_MUX_SEL_DECL (4:0)

/*
 * Function ref4_clk2cnr can be selected through the following pads:
 *   COMMA_3
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF4_CLK2CNR_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the REF4_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_REF4_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTC_CLK_REF4_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_REF4_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTC_CLK_REF4_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_REF4_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTC_CLK_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTC_CLK_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function pdm0_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM0_CLK_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the PDM0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_PDM0_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTC_CLK_PDM0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_PDM0_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTC_CLK_PDM0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_PDM0_CLK_AND_SEL_DECL 12

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTC_CLK_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTC_CLK_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function cdc0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC0_CLK_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the CDC0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_CDC0_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTC_CLK_CDC0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_CDC0_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTC_CLK_CDC0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_CDC0_CLK_AND_SEL_DECL 15

/*
 * This field is used to control PCM2_BCLK_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the PCM2_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_PCM2_BCLK_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTC_CLK_PCM2_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_PCM2_BCLK_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTC_CLK_PCM2_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_PCM2_BCLK_AND_SEL_DECL 17

/*
 * This field is used to control PCM_PT2_BCLK_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the PCM_PT2_BCLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_PCM_PT2_BCLK_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTC_CLK_PCM_PT2_BCLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_PCM_PT2_BCLK_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTC_CLK_PCM_PT2_BCLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_PCM_PT2_BCLK_AND_SEL_DECL 18

/*
 * Function i2c0_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   IRQ
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_CLK_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the I2C0_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_I2C0_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTC_CLK_I2C0_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_I2C0_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTC_CLK_I2C0_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_I2C0_CLK_AND_SEL_DECL 19

/*
 * Function uart1_sin can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_SIN_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the UART1_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_UART1_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTC_CLK_UART1_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_UART1_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTC_CLK_UART1_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_UART1_SIN_AND_SEL_DECL 20

/*
 * Function uart0_cts_n can be selected through the following pads:
 *   COMMA_0
 *   COMMB_0
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_CTS_N_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the UART0_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_UART0_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTC_CLK_UART0_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_UART0_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTC_CLK_UART0_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_UART0_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_cs0_n can be selected through the following pads:
 *   COMMB_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CS0_N_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the SPI1_CS0_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_SPI1_CS0_N_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTC_CLK_SPI1_CS0_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_SPI1_CS0_N_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTC_CLK_SPI1_CS0_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_SPI1_CS0_N_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_20_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the GPIO_20 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_GPIO_20_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTC_CLK_GPIO_20_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTC_CLK_GPIO_20_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTC_CLK_GPIO_20_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_GPIO_20_AND_SEL_DECL 26

/*
 * This field is used to control FI_20_AND_SEL for pad PORTC_CLK, a separate
 * receiver enable for the FI_20 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_FI_20_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTC_CLK_FI_20_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_FI_20_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTC_CLK_FI_20_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_FI_20_AND_SEL_DECL 27

/*
 * Function io2stmr_4_12_20 can be selected through the following pads:
 *   COMMA_0
 *   PORTA_CLK
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_4_12_20_AND_SEL for pad PORTC_CLK, a
 * separate receiver enable for the IO2STMR_4_12_20 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_CLK_IO2STMR_4_12_20_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTC_CLK_IO2STMR_4_12_20_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_CLK_IO2STMR_4_12_20_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTC_CLK_IO2STMR_4_12_20_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_CLK_IO2STMR_4_12_20_AND_SEL_DECL 28

/*** IO_CTRL_PORTC_DI (0x40022064) ***/
/*
 * This register is used for pad PORTC_DI's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTC_DI_ADDR (0x40022064)
#define IAXXX_IO_CTRL_PORTC_DI_MASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTC_DI_RMASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTC_DI_WMASK_VAL 0x1e7e681f
#define IAXXX_IO_CTRL_PORTC_DI_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTC_DI.
 *   0x6: dmic_do1
 *   0xc: pcm2_dt
 *   0xe: i2c1_data
 *   0x11: spi1_miso
 *   0x12: spi0_cs2_n
 *   0x13: spi1_cs2_n
 *   0x15: gpio_22
 *   0x16: dmx_fo_10
 *   0x17: hmd_fo_10
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTC_DI_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTC_DI_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTC_DI_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTC_DI_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTC_DI_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di1 can be selected through the following pads:
 *   COMMA_1
 *   COMMA_3
 *   COMMB_0
 *   COMMB_2
 *   GPIO_1
 *   IRQ
 *   PORTA_CLK
 *   PORTA_DI
 *   PORTB_FS
 *   PORTB_DO
 *   PORTC_CLK
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI1_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the DMIC_DI1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_DI1_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_DI1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_DI1_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_DI1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_DI1_AND_SEL_DECL 11

/*
 * Function dmic_pt1_di can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_DI_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the DMIC_PT1_DI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_PT1_DI_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_PT1_DI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_PT1_DI_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_PT1_DI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_DMIC_PT1_DI_AND_SEL_DECL 13

/*
 * Function cdc_adc_in0 can be selected through the following pads:
 *   COMMA_3
 *   COMMB_1
 *   GPIO_0
 *   PORTA_CLK
 *   PORTB_DO
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN0_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the CDC_ADC_IN0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_CDC_ADC_IN0_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTC_DI_CDC_ADC_IN0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_CDC_ADC_IN0_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTC_DI_CDC_ADC_IN0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_CDC_ADC_IN0_AND_SEL_DECL 14

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad PORTC_DI, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTC_DI_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTC_DI_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_PCM2_DR_AND_SEL_DECL 17

/*
 * This field is used to control PCM_PT2_DR_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the PCM_PT2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_PCM_PT2_DR_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTC_DI_PCM_PT2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_PCM_PT2_DR_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTC_DI_PCM_PT2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_PCM_PT2_DR_AND_SEL_DECL 18

/*
 * Function i2c1_data can be selected through the following pads:
 *   COMMA_2
 *   COMMB_1
 *   GPIO_1
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_DATA_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the I2C1_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_I2C1_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTC_DI_I2C1_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_I2C1_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTC_DI_I2C1_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_I2C1_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_PORTC_DI_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_PORTC_DI_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_PORTC_DI_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_PORTC_DI_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi1_miso can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MISO_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the SPI1_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_SPI1_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTC_DI_SPI1_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_SPI1_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTC_DI_SPI1_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_SPI1_MISO_AND_SEL_DECL 22

/*
 * Function afg_msel can be selected through the following pads:
 *   COMMB_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_MSEL_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the AFG_MSEL pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_AFG_MSEL_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_PORTC_DI_AFG_MSEL_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_AFG_MSEL_AND_SEL_POS 25
#define IAXXX_IO_CTRL_PORTC_DI_AFG_MSEL_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_AFG_MSEL_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_22_AND_SEL for pad PORTC_DI, a separate
 * receiver enable for the GPIO_22 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_GPIO_22_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTC_DI_GPIO_22_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTC_DI_GPIO_22_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTC_DI_GPIO_22_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_GPIO_22_AND_SEL_DECL 26

/*
 * This field is used to control FI_22_AND_SEL for pad PORTC_DI, a separate
 * receiver enable for the FI_22 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_FI_22_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTC_DI_FI_22_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_FI_22_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTC_DI_FI_22_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_FI_22_AND_SEL_DECL 27

/*
 * Function io2stmr_6_14_22 can be selected through the following pads:
 *   COMMA_2
 *   PORTA_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_6_14_22_AND_SEL for pad PORTC_DI, a
 * separate receiver enable for the IO2STMR_6_14_22 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DI_IO2STMR_6_14_22_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTC_DI_IO2STMR_6_14_22_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DI_IO2STMR_6_14_22_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTC_DI_IO2STMR_6_14_22_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DI_IO2STMR_6_14_22_AND_SEL_DECL 28

/*** IO_CTRL_PORTC_DO (0x40022068) ***/
/*
 * This register is used for pad PORTC_DO's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTC_DO_ADDR (0x40022068)
#define IAXXX_IO_CTRL_PORTC_DO_MASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTC_DO_RMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTC_DO_WMASK_VAL 0x1e4afa1f
#define IAXXX_IO_CTRL_PORTC_DO_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTC_DO.
 *   0x4: cdc_mclk
 *   0x5: i2s_pcm5_bclk
 *   0x6: dmic_do0
 *   0xc: pcm2_dt
 *   0xd: pcm_pt2_dt
 *   0xe: i2c1_clk
 *   0xf: uart0_sout
 *   0x10: uart1_rts_n
 *   0x11: spi1_clk
 *   0x12: spi0_cs3_n
 *   0x13: spi1_cs3_n
 *   0x15: gpio_23
 *   0x16: dmx_fo_11
 *   0x17: hmd_fo_11
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTC_DO_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTC_DO_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTC_DO_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTC_DO_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTC_DO_MUX_SEL_DECL (4:0)

/*
 * Function ref5_clk2cnr can be selected through the following pads:
 *   COMMB_0
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control REF5_CLK2CNR_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the REF5_CLK2CNR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_REF5_CLK2CNR_AND_SEL_MASK 0x00000200
#define IAXXX_IO_CTRL_PORTC_DO_REF5_CLK2CNR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_REF5_CLK2CNR_AND_SEL_POS 9
#define IAXXX_IO_CTRL_PORTC_DO_REF5_CLK2CNR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_REF5_CLK2CNR_AND_SEL_DECL 9

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function pdm1_clk can be selected through the following pads:
 *   COMMA_0
 *   COMMB_3
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PDM1_CLK_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the PDM1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_PDM1_CLK_AND_SEL_MASK 0x00001000
#define IAXXX_IO_CTRL_PORTC_DO_PDM1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_PDM1_CLK_AND_SEL_POS 12
#define IAXXX_IO_CTRL_PORTC_DO_PDM1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_PDM1_CLK_AND_SEL_DECL 12

/*
 * Function dmic_pt1_clk_in can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT1_CLK_IN_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the DMIC_PT1_CLK_IN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_PT1_CLK_IN_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_PT1_CLK_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_PT1_CLK_IN_AND_SEL_POS 13
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_PT1_CLK_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_DMIC_PT1_CLK_IN_AND_SEL_DECL 13

/*
 * Function cdc_adc_in1 can be selected through the following pads:
 *   COMMA_0
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN1_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the CDC_ADC_IN1 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_CDC_ADC_IN1_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTC_DO_CDC_ADC_IN1_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_CDC_ADC_IN1_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTC_DO_CDC_ADC_IN1_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_CDC_ADC_IN1_AND_SEL_DECL 14

/*
 * Function cdc1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_3
 *   IRQ
 *   PORTA_DO
 *   PORTB_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC1_CLK_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the CDC1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_CDC1_CLK_AND_SEL_MASK 0x00008000
#define IAXXX_IO_CTRL_PORTC_DO_CDC1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_CDC1_CLK_AND_SEL_POS 15
#define IAXXX_IO_CTRL_PORTC_DO_CDC1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_CDC1_CLK_AND_SEL_DECL 15

/*
 * Function pcm2_dr can be selected through the following pads:
 *   COMMA_0
 *   COMMA_1
 *   COMMA_2
 *   COMMA_3
 *   PORTC_DI
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM2_DR_AND_SEL for pad PORTC_DO, a separate
 * receiver enable for the PCM2_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_PCM2_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTC_DO_PCM2_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_PCM2_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTC_DO_PCM2_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_PCM2_DR_AND_SEL_DECL 17

/*
 * Function i2c1_clk can be selected through the following pads:
 *   COMMA_3
 *   COMMB_0
 *   GPIO_0
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C1_CLK_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the I2C1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_I2C1_CLK_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTC_DO_I2C1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_I2C1_CLK_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTC_DO_I2C1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_I2C1_CLK_AND_SEL_DECL 19

/*
 * Function spi1_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_CLK_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the SPI1_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_SPI1_CLK_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTC_DO_SPI1_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_SPI1_CLK_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTC_DO_SPI1_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_SPI1_CLK_AND_SEL_DECL 22

/*
 * Function afg_spi_clk can be selected through the following pads:
 *   COMMB_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control AFG_SPI_CLK_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the AFG_SPI_CLK pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_AFG_SPI_CLK_AND_SEL_MASK 0x02000000
#define IAXXX_IO_CTRL_PORTC_DO_AFG_SPI_CLK_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_AFG_SPI_CLK_AND_SEL_POS 25
#define IAXXX_IO_CTRL_PORTC_DO_AFG_SPI_CLK_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_AFG_SPI_CLK_AND_SEL_DECL 25

/*
 * This field is used to control GPIO_23_AND_SEL for pad PORTC_DO, a separate
 * receiver enable for the GPIO_23 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_GPIO_23_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTC_DO_GPIO_23_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTC_DO_GPIO_23_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTC_DO_GPIO_23_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_GPIO_23_AND_SEL_DECL 26

/*
 * This field is used to control FI_23_AND_SEL for pad PORTC_DO, a separate
 * receiver enable for the FI_23 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_FI_23_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTC_DO_FI_23_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_FI_23_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTC_DO_FI_23_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_FI_23_AND_SEL_DECL 27

/*
 * Function io2stmr_7_15_23 can be selected through the following pads:
 *   COMMA_3
 *   PORTA_DO
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_7_15_23_AND_SEL for pad PORTC_DO, a
 * separate receiver enable for the IO2STMR_7_15_23 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_DO_IO2STMR_7_15_23_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTC_DO_IO2STMR_7_15_23_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_DO_IO2STMR_7_15_23_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTC_DO_IO2STMR_7_15_23_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_DO_IO2STMR_7_15_23_AND_SEL_DECL 28

/*** IO_CTRL_PORTC_FS (0x4002206c) ***/
/*
 * This register is used for pad PORTC_FS's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PORTC_FS_ADDR (0x4002206c)
#define IAXXX_IO_CTRL_PORTC_FS_MASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTC_FS_RMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTC_FS_WMASK_VAL 0x1c4f481f
#define IAXXX_IO_CTRL_PORTC_FS_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad PORTC_FS.
 *   0x5: i2s_pcm2_fs
 *   0x6: dmic_do0
 *   0x8: dmic_pt0_do
 *   0xb: cic_combo_ext_sync_out
 *   0xd: pcm_pt2_fs
 *   0xe: i2c0_data
 *   0xf: uart1_sout
 *   0x10: uart0_rts_n
 *   0x11: spi1_mosi
 *   0x12: spi0_cs1_n
 *   0x13: spi1_cs1_n
 *   0x14: afg_sda
 *   0x15: gpio_21
 *   0x16: dmx_fo_9
 *   0x17: hmd_fo_9
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_PORTC_FS_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_PORTC_FS_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_PORTC_FS_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_PORTC_FS_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_PORTC_FS_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_PORTC_FS_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_PORTC_FS_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function cdc_adc_in3 can be selected through the following pads:
 *   COMMA_2
 *   COMMB_0
 *   IRQ
 *   PORTA_DO
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN3_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the CDC_ADC_IN3 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_CDC_ADC_IN3_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_PORTC_FS_CDC_ADC_IN3_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_CDC_ADC_IN3_AND_SEL_POS 14
#define IAXXX_IO_CTRL_PORTC_FS_CDC_ADC_IN3_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_CDC_ADC_IN3_AND_SEL_DECL 14

/*
 * Function cic_combo_ext_sync_in can be selected through the following pads:
 *
   COMMA_1
 *   COMMA_2
 *   COMMB_1
 *   COMMB_2
 *   GPIO_1
 *   PORTA_FS
 *   PORTB_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CIC_COMBO_EXT_SYNC_IN_AND_SEL for pad
 * PORTC_FS, a separate receiver enable for the CIC_COMBO_EXT_SYNC_IN pad
 * function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_MASK 0x00010000
#define IAXXX_IO_CTRL_PORTC_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_POS 16
#define IAXXX_IO_CTRL_PORTC_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_CIC_COMBO_EXT_SYNC_IN_AND_SEL_DECL 16

/*
 * This field is used to control PCM2_FS_AND_SEL for pad PORTC_FS, a separate
 * receiver enable for the PCM2_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_PCM2_FS_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_PORTC_FS_PCM2_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_PCM2_FS_AND_SEL_POS 17
#define IAXXX_IO_CTRL_PORTC_FS_PCM2_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_PCM2_FS_AND_SEL_DECL 17

/*
 * This field is used to control PCM_PT2_FS_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the PCM_PT2_FS pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_PCM_PT2_FS_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_PORTC_FS_PCM_PT2_FS_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_PCM_PT2_FS_AND_SEL_POS 18
#define IAXXX_IO_CTRL_PORTC_FS_PCM_PT2_FS_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_PCM_PT2_FS_AND_SEL_DECL 18

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_PORTC_FS_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_PORTC_FS_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function spi1_mosi can be selected through the following pads:
 *   COMMB_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI1_MOSI_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the SPI1_MOSI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_SPI1_MOSI_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_PORTC_FS_SPI1_MOSI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_SPI1_MOSI_AND_SEL_POS 22
#define IAXXX_IO_CTRL_PORTC_FS_SPI1_MOSI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_SPI1_MOSI_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_21_AND_SEL for pad PORTC_FS, a separate
 * receiver enable for the GPIO_21 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_GPIO_21_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_PORTC_FS_GPIO_21_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_PORTC_FS_GPIO_21_AND_SEL_POS 26
#define IAXXX_IO_CTRL_PORTC_FS_GPIO_21_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_GPIO_21_AND_SEL_DECL 26

/*
 * This field is used to control FI_21_AND_SEL for pad PORTC_FS, a separate
 * receiver enable for the FI_21 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_FI_21_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_PORTC_FS_FI_21_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_FI_21_AND_SEL_POS 27
#define IAXXX_IO_CTRL_PORTC_FS_FI_21_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_FI_21_AND_SEL_DECL 27

/*
 * Function io2stmr_5_13_21 can be selected through the following pads:
 *   COMMA_1
 *   PORTA_FS
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_5_13_21_AND_SEL for pad PORTC_FS, a
 * separate receiver enable for the IO2STMR_5_13_21 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_PORTC_FS_IO2STMR_5_13_21_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_PORTC_FS_IO2STMR_5_13_21_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_PORTC_FS_IO2STMR_5_13_21_AND_SEL_POS 28
#define IAXXX_IO_CTRL_PORTC_FS_IO2STMR_5_13_21_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_PORTC_FS_IO2STMR_5_13_21_AND_SEL_DECL 28

/*** IO_CTRL_PWR_GOOD (0x40022070) ***/
/*
 * This register is used for pad PWR_GOOD's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PWR_GOOD_ADDR (0x40022070)
#define IAXXX_IO_CTRL_PWR_GOOD_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_GOOD_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_GOOD_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_GOOD_RESET_VAL 0x00000000

/*** IO_CTRL_PWR_RESET_N (0x40022074) ***/
/*
 * This register is used for pad PWR_RESET_N's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_PWR_RESET_N_ADDR (0x40022074)
#define IAXXX_IO_CTRL_PWR_RESET_N_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_RESET_N_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_RESET_N_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_PWR_RESET_N_RESET_VAL 0x00000000

/*** IO_CTRL_SYS_RESET_N (0x40022078) ***/
/*
 * This register is used for pad SYS_RESET_N's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_SYS_RESET_N_ADDR (0x40022078)
#define IAXXX_IO_CTRL_SYS_RESET_N_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_SYS_RESET_N_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_SYS_RESET_N_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_SYS_RESET_N_RESET_VAL 0x00000000

/*** IO_CTRL_TEST (0x4002207c) ***/
/*
 * This register is used for pad TEST's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_TEST_ADDR (0x4002207c)
#define IAXXX_IO_CTRL_TEST_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TEST_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TEST_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TEST_RESET_VAL 0x00000000

/*** IO_CTRL_TRACE_CLK (0x40022080) ***/
/*
 * This register is used for pad TRACE_CLK's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_TRACE_CLK_ADDR (0x40022080)
#define IAXXX_IO_CTRL_TRACE_CLK_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_CLK_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_CLK_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_CLK_RESET_VAL 0x00000000

/*** IO_CTRL_TRACE_DATA (0x40022084) ***/
/*
 * This register is used for pad TRACE_DATA's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_TRACE_DATA_ADDR (0x40022084)
#define IAXXX_IO_CTRL_TRACE_DATA_MASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_DATA_RMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_DATA_WMASK_VAL 0x00000000
#define IAXXX_IO_CTRL_TRACE_DATA_RESET_VAL 0x00000000

/*** IO_CTRL_WAKE (0x40022088) ***/
/*
 * This register is used for pad WAKE's IO function control.
 * INTERNAL: Refer to the <a href="#io_pad_control_diagram">IO Function and
 * PAD Control diagram</a> to understand these controls better.Refer to <a
 * href="http://intranet/Engineering/VLSI/Shared%20Documents/D4100S/Architecture/D4100S_pinlist.xlsx">D4100S_pinlist
 * spreadsheet</a>'s 'Func' tab to get all functions supported on this pin.
 */
#define IAXXX_IO_CTRL_WAKE_ADDR (0x40022088)
#define IAXXX_IO_CTRL_WAKE_MASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_WAKE_RMASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_WAKE_WMASK_VAL 0x1c7e681f
#define IAXXX_IO_CTRL_WAKE_RESET_VAL 0x0400001f

/*
 * This field is used to select a function source for output data and output
 * enable control for pad WAKE.
 *   0x6: dmic_do0
 *   0xc: pcm1_dt
 *   0xe: i2c0_data
 *   0x11: spi0_miso
 *   0x12: spi0_cs2_n
 *   0x13: spi1_cs2_n
 *   0x15: gpio_2
 *   0x16: dmx_fo_2
 *   0x17: hmd_fo_2
 *   Otherwise: De-assert output enable. Field DDST of this register
 * determines the value of the output.
 */
#define IAXXX_IO_CTRL_WAKE_MUX_SEL_MASK 0x0000001f
#define IAXXX_IO_CTRL_WAKE_MUX_SEL_RESET_VAL 0x1f
#define IAXXX_IO_CTRL_WAKE_MUX_SEL_POS 0
#define IAXXX_IO_CTRL_WAKE_MUX_SEL_SIZE 5
#define IAXXX_IO_CTRL_WAKE_MUX_SEL_DECL (4:0)

/*
 * Function dmic_di0 can be selected through the following pads:
 *   COMMA_0
 *   COMMA_2
 *   COMMB_1
 *   COMMB_3
 *   GPIO_0
 *   WAKE
 *   PORTA_FS
 *   PORTA_DO
 *   PORTB_CLK
 *   PORTB_DI
 *   PORTC_FS
 *   PORTC_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_DI0_AND_SEL for pad WAKE, a separate
 * receiver enable for the DMIC_DI0 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_DMIC_DI0_AND_SEL_MASK 0x00000800
#define IAXXX_IO_CTRL_WAKE_DMIC_DI0_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_DMIC_DI0_AND_SEL_POS 11
#define IAXXX_IO_CTRL_WAKE_DMIC_DI0_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_DMIC_DI0_AND_SEL_DECL 11

/*
 * Function dmic_pt0_di can be selected through the following pads:
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control DMIC_PT0_DI_AND_SEL for pad WAKE, a separate
 * receiver enable for the DMIC_PT0_DI pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_DMIC_PT0_DI_AND_SEL_MASK 0x00002000
#define IAXXX_IO_CTRL_WAKE_DMIC_PT0_DI_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_DMIC_PT0_DI_AND_SEL_POS 13
#define IAXXX_IO_CTRL_WAKE_DMIC_PT0_DI_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_DMIC_PT0_DI_AND_SEL_DECL 13

/*
 * Function cdc_adc_in2 can be selected through the following pads:
 *   COMMA_1
 *   COMMB_3
 *   WAKE
 *   PORTA_DI
 *   PORTB_FS
 *   PORTC_CLK
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control CDC_ADC_IN2_AND_SEL for pad WAKE, a separate
 * receiver enable for the CDC_ADC_IN2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_CDC_ADC_IN2_AND_SEL_MASK 0x00004000
#define IAXXX_IO_CTRL_WAKE_CDC_ADC_IN2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_CDC_ADC_IN2_AND_SEL_POS 14
#define IAXXX_IO_CTRL_WAKE_CDC_ADC_IN2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_CDC_ADC_IN2_AND_SEL_DECL 14

/*
 * Function pcm1_dr can be selected through the following pads:
 *   WAKE
 *   IRQ
 *   PORTB_DI
 *   PORTB_DO
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM1_DR_AND_SEL for pad WAKE, a separate
 * receiver enable for the PCM1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_PCM1_DR_AND_SEL_MASK 0x00020000
#define IAXXX_IO_CTRL_WAKE_PCM1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_PCM1_DR_AND_SEL_POS 17
#define IAXXX_IO_CTRL_WAKE_PCM1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_PCM1_DR_AND_SEL_DECL 17

/*
 * Function pcm_pt1_dr can be selected through the following pads:
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control PCM_PT1_DR_AND_SEL for pad WAKE, a separate
 * receiver enable for the PCM_PT1_DR pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_PCM_PT1_DR_AND_SEL_MASK 0x00040000
#define IAXXX_IO_CTRL_WAKE_PCM_PT1_DR_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_PCM_PT1_DR_AND_SEL_POS 18
#define IAXXX_IO_CTRL_WAKE_PCM_PT1_DR_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_PCM_PT1_DR_AND_SEL_DECL 18

/*
 * Function i2c0_data can be selected through the following pads:
 *   COMMA_1
 *   COMMB_2
 *   WAKE
 *   PORTA_FS
 *   PORTB_DI
 *   PORTC_FS
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control I2C0_DATA_AND_SEL for pad WAKE, a separate
 * receiver enable for the I2C0_DATA pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_I2C0_DATA_AND_SEL_MASK 0x00080000
#define IAXXX_IO_CTRL_WAKE_I2C0_DATA_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_I2C0_DATA_AND_SEL_POS 19
#define IAXXX_IO_CTRL_WAKE_I2C0_DATA_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_I2C0_DATA_AND_SEL_DECL 19

/*
 * Function uart0_sin can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART0_SIN_AND_SEL for pad WAKE, a separate
 * receiver enable for the UART0_SIN pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_UART0_SIN_AND_SEL_MASK 0x00100000
#define IAXXX_IO_CTRL_WAKE_UART0_SIN_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_UART0_SIN_AND_SEL_POS 20
#define IAXXX_IO_CTRL_WAKE_UART0_SIN_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_UART0_SIN_AND_SEL_DECL 20

/*
 * Function uart1_cts_n can be selected through the following pads:
 *   COMMA_2
 *   COMMB_2
 *   WAKE
 *   PORTA_DI
 *   PORTB_DI
 *   PORTC_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control UART1_CTS_N_AND_SEL for pad WAKE, a separate
 * receiver enable for the UART1_CTS_N pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_UART1_CTS_N_AND_SEL_MASK 0x00200000
#define IAXXX_IO_CTRL_WAKE_UART1_CTS_N_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_UART1_CTS_N_AND_SEL_POS 21
#define IAXXX_IO_CTRL_WAKE_UART1_CTS_N_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_UART1_CTS_N_AND_SEL_DECL 21

/*
 * Function spi0_miso can be selected through the following pads:
 *   COMMA_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control SPI0_MISO_AND_SEL for pad WAKE, a separate
 * receiver enable for the SPI0_MISO pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_SPI0_MISO_AND_SEL_MASK 0x00400000
#define IAXXX_IO_CTRL_WAKE_SPI0_MISO_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_SPI0_MISO_AND_SEL_POS 22
#define IAXXX_IO_CTRL_WAKE_SPI0_MISO_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_SPI0_MISO_AND_SEL_DECL 22

/*
 * This field is used to control GPIO_2_AND_SEL for pad WAKE, a separate
 * receiver enable for the GPIO_2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_GPIO_2_AND_SEL_MASK 0x04000000
#define IAXXX_IO_CTRL_WAKE_GPIO_2_AND_SEL_RESET_VAL 0x1
#define IAXXX_IO_CTRL_WAKE_GPIO_2_AND_SEL_POS 26
#define IAXXX_IO_CTRL_WAKE_GPIO_2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_GPIO_2_AND_SEL_DECL 26

/*
 * This field is used to control FI_2_AND_SEL for pad WAKE, a separate
 * receiver enable for the FI_2 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_FI_2_AND_SEL_MASK 0x08000000
#define IAXXX_IO_CTRL_WAKE_FI_2_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_FI_2_AND_SEL_POS 27
#define IAXXX_IO_CTRL_WAKE_FI_2_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_FI_2_AND_SEL_DECL 27

/*
 * Function io2stmr_2_10_18 can be selected through the following pads:
 *   COMMB_2
 *   WAKE
 *   PORTB_DI
 * Please make sure you set the AND_SEL bit for only one of these pads to
 * turn on this function.
 *
 This field is used to control IO2STMR_2_10_18_AND_SEL for pad WAKE, a
 * separate receiver enable for the IO2STMR_2_10_18 pad function.
 *   0x0: disable receive function, input to core logic driven to "0".
 *   0x1: enable receive function.
 */
#define IAXXX_IO_CTRL_WAKE_IO2STMR_2_10_18_AND_SEL_MASK 0x10000000
#define IAXXX_IO_CTRL_WAKE_IO2STMR_2_10_18_AND_SEL_RESET_VAL 0x0
#define IAXXX_IO_CTRL_WAKE_IO2STMR_2_10_18_AND_SEL_POS 28
#define IAXXX_IO_CTRL_WAKE_IO2STMR_2_10_18_AND_SEL_SIZE 1
#define IAXXX_IO_CTRL_WAKE_IO2STMR_2_10_18_AND_SEL_DECL 28

/* Number of registers in the module */
#define IAXXX_IO_CTRL_REG_NUM 35

#endif /* __IAXXX_REGISTER_DEFS_IO_CTRL_H__*/
