/* SPDX-License-Identifier: GPL-2.0-only OR BSD-3-Clause */
/******************************************************************************
 *
 * This file is provided under a dual license.  When you use or
 * distribute this software, you may choose to be licensed under
 * version 2 of the GNU General Public License ("GPLv2 License")
 * or BSD License.
 *
 * GPLv2 License
 *
 * Copyright(C) 2019 MediaTek Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of version 2 of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See http://www.gnu.org/licenses/gpl-2.0.html for more details.
 *
 * BSD LICENSE
 *
 * Copyright(C) 2019 MediaTek Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *****************************************************************************/

/* Copyright (C) 2014 Cadence Design Systems.  All rights reserved           */
/* THIS FILE IS AUTOMATICALLY GENERATED BY CADENCE BLUEPRINT, DO NOT EDIT    */
/*                                                                           */


#ifndef __REG_CDN_AXI_WRAPPER_IB_MACRO_H__
#define __REG_CDN_AXI_WRAPPER_IB_MACRO_H__


/* macros for BlueprintGlobalNameSpace::cdn_axi_wrapper_ib::axiw_ib_region_ad0 */
#ifndef __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0_MACRO__
#define __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0_MACRO__

/* macros for field num_bits */
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__SHIFT               0
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__WIDTH               6
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__MASK      0x0000003fU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__READ(src) \
                    (uint32_t)(src)\
                    & 0x0000003fU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000003fU)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000003fU) | ((uint32_t)(src) &\
                    0x0000003fU)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__NUM_BITS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000003fU)))

/* macros for field rsvd0 */
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__RSVD0__SHIFT                  6
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__RSVD0__WIDTH                  2
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__RSVD0__MASK         0x000000c0U
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__RSVD0__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000c0U) >> 6)

/* macros for field data */
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__SHIFT                   8
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__WIDTH                  24
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__MASK          0xffffff00U
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffffff00U) >> 8)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0xffffff00U)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffff00U) | (((uint32_t)(src) <<\
                    8) & 0xffffff00U)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__DATA__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0xffffff00U)))
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__TYPE                   uint32_t
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__READ                0xffffffffU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0__WRITE               0xffffffffU

#endif /* __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD0_MACRO__ */


/* macros for addr0 */
#define INST_ADDR0__NUM                                                       1

/* macros for BlueprintGlobalNameSpace::cdn_axi_wrapper_ib::axiw_ib_region_ad1 */
#ifndef __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1_MACRO__
#define __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1_MACRO__

/* macros for field data */
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__SHIFT                   0
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__WIDTH                  32
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__MASK          0xffffffffU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__READ(src) \
                    (uint32_t)(src)\
                    & 0xffffffffU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__DATA__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__TYPE                   uint32_t
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__READ                0xffffffffU
#define CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1__WRITE               0xffffffffU

#endif /* __CDN_AXI_WRAPPER_IB__AXIW_IB_REGION_AD1_MACRO__ */


/* macros for addr1 */
#define INST_ADDR1__NUM                                                       1

#endif /* __REG_CDN_AXI_WRAPPER_IB_MACRO_H__ */
